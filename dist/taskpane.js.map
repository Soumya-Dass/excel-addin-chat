{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/taskpane/dataService.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./node_modules/@google/generative-ai/dist/index.mjs","webpack://office-addin-taskpane-js/./src/taskpane/aiService.js","webpack://office-addin-taskpane-js/./node_modules/marked/lib/marked.esm.js","webpack://office-addin-taskpane-js/./src/taskpane/uiService.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["/* global Excel */\r\n\r\n// DataService - Advanced Excel data reading with full Office.js capabilities\r\nclass DataService {\r\n    constructor() {\r\n        this.CONFIG = {\r\n            // No artificial limits - use actual data boundaries\r\n            MAX_ANALYSIS_CELLS: 100000, // Safety limit for performance (100k cells)\r\n            CHUNK_SIZE: 10000, // For processing large datasets in chunks\r\n            SAMPLE_RATIO: 0.1, // 10% sampling for very large datasets\r\n        };\r\n        this.currentWorksheetData = null;\r\n        this.workbookStructure = null;\r\n    }\r\n\r\n    // Advanced Excel data reading with full Office.js capabilities\r\n    async readCurrentWorksheetDataEnhanced(shouldUseSelection = true, includeAllSheets = false) {\r\n        return new Promise((resolve, reject) => {\r\n            Excel.run(async (context) => {\r\n                try {\r\n                    const worksheet = context.workbook.worksheets.getActiveWorksheet();\r\n                    worksheet.load('name');\r\n                    \r\n                    let range;\r\n                    let isSelection = false;\r\n                    let isSampled = false;\r\n                    let dataMetadata = {};\r\n                    \r\n                    // First, gather advanced worksheet information\r\n                    const tables = worksheet.tables;\r\n                    const pivotTables = worksheet.pivotTables;\r\n                    const charts = worksheet.charts;\r\n                    tables.load(['name', 'id']);\r\n                    pivotTables.load(['name', 'id']);\r\n                    charts.load(['name', 'id']);\r\n                    \r\n                    if (shouldUseSelection) {\r\n                        // Try to use selected range\r\n                        const selectedRange = context.workbook.getSelectedRange();\r\n                        selectedRange.load(['values', 'formulas', 'rowCount', 'columnCount', 'address', 'numberFormat']);\r\n                        await context.sync();\r\n                        \r\n                        // Check if selection is valid and reasonable size\r\n                        if (selectedRange.rowCount > 1 || selectedRange.columnCount > 1 || \r\n                            (selectedRange.values[0][0] !== null && selectedRange.values[0][0] !== \"\")) {\r\n                            \r\n                            const totalCells = selectedRange.rowCount * selectedRange.columnCount;\r\n                            if (totalCells <= this.CONFIG.MAX_ANALYSIS_CELLS) {\r\n                                range = selectedRange;\r\n                                isSelection = true;\r\n                                console.log(`Using selection: ${range.address} (${totalCells} cells)`);\r\n                            } else {\r\n                                console.log(`Selection too large (${totalCells} cells), using smart sampling instead`);\r\n                                range = await this.getSmartSampledRange(context, worksheet, selectedRange);\r\n                                isSelection = true;\r\n                                isSampled = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    // If not using selection, use dynamic used range detection\r\n                    if (!range) {\r\n                        const usedRange = worksheet.getUsedRange();\r\n                        if (usedRange) {\r\n                            usedRange.load(['values', 'formulas', 'rowCount', 'columnCount', 'address', 'numberFormat']);\r\n                            await context.sync();\r\n                            \r\n                            const totalCells = usedRange.rowCount * usedRange.columnCount;\r\n                            console.log(`Detected used range: ${usedRange.address} (${totalCells} cells)`);\r\n                            \r\n                            if (totalCells <= this.CONFIG.MAX_ANALYSIS_CELLS) {\r\n                                range = usedRange;\r\n                            } else {\r\n                                // For very large ranges, use smart sampling\r\n                                console.log(`Used range too large (${totalCells} cells), applying smart sampling`);\r\n                                range = await this.getSmartSampledRange(context, worksheet, usedRange);\r\n                                isSampled = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    // Collect metadata about worksheet objects\r\n                    await context.sync();\r\n                    dataMetadata = {\r\n                        tables: tables.items.map(t => ({ name: t.name, id: t.id })),\r\n                        pivotTables: pivotTables.items.map(p => ({ name: p.name, id: p.id })),\r\n                        charts: charts.items.map(c => ({ name: c.name, id: c.id })),\r\n                        hasNamedRanges: await this.detectNamedRanges(context)\r\n                    };\r\n                    \r\n                    if (!range || range.rowCount === 0 || range.columnCount === 0) {\r\n                        this.currentWorksheetData = {\r\n                            worksheetName: worksheet.name,\r\n                            structuredData: { type: 'empty', headers: [], dataRows: [], keyRows: [] },\r\n                            dataMetadata: dataMetadata,\r\n                            summary: 'The current worksheet appears to be empty.'\r\n                        };\r\n                        resolve(this.currentWorksheetData);\r\n                        return;\r\n                    }\r\n                    \r\n                    // Get comprehensive data including formulas and formatting\r\n                    const rawValues = range.values;\r\n                    const rawFormulas = range.formulas;\r\n                    const numberFormats = range.numberFormat;\r\n                    const finalAddress = range.address;\r\n                    \r\n                    console.log(`Processing range: ${finalAddress} (${range.rowCount} rows × ${range.columnCount} columns)`);\r\n                    \r\n                    // Advanced data structure analysis with formulas and formatting\r\n                    const structuredData = this.analyzeAdvancedTableStructure(rawValues, rawFormulas, numberFormats);\r\n                    \r\n                    // Collect additional workbook structure if requested\r\n                    let workbookData = null;\r\n                    if (includeAllSheets) {\r\n                        workbookData = await this.analyzeWorkbookStructure(context);\r\n                    }\r\n                    \r\n                    this.currentWorksheetData = {\r\n                        worksheetName: worksheet.name,\r\n                        address: finalAddress,\r\n                        totalRows: range.rowCount,\r\n                        totalCols: range.columnCount,\r\n                        rawData: rawValues,\r\n                        rawFormulas: rawFormulas,\r\n                        numberFormats: numberFormats,\r\n                        structuredData: structuredData,\r\n                        dataMetadata: dataMetadata,\r\n                        workbookData: workbookData,\r\n                        isSelection: isSelection,\r\n                        isSampled: isSampled,\r\n                        summary: this.generateDataSummary(worksheet.name, finalAddress, range, isSelection, isSampled, structuredData, dataMetadata)\r\n                    };\r\n                    \r\n                    resolve(this.currentWorksheetData);\r\n                    \r\n                } catch (error) {\r\n                    reject(new Error('Failed to read Excel data: ' + error.message));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Smart sampling for very large datasets\r\n    async getSmartSampledRange(context, worksheet, originalRange) {\r\n        const totalRows = originalRange.rowCount;\r\n        const totalCols = originalRange.columnCount;\r\n        \r\n        // Calculate sampling strategy\r\n        const maxSampleRows = Math.min(Math.floor(Math.sqrt(this.CONFIG.MAX_ANALYSIS_CELLS)), totalRows);\r\n        const maxSampleCols = Math.min(Math.floor(this.CONFIG.MAX_ANALYSIS_CELLS / maxSampleRows), totalCols);\r\n        \r\n        // Always include first few rows (headers) and last few rows (totals)\r\n        const headerRows = Math.min(5, totalRows);\r\n        const footerRows = Math.min(3, totalRows - headerRows);\r\n        const middleRows = Math.max(0, maxSampleRows - headerRows - footerRows);\r\n        \r\n        // Sample columns proportionally \r\n        const sampleCols = Math.min(maxSampleCols, totalCols);\r\n        \r\n        console.log(`Smart sampling: ${maxSampleRows} rows × ${sampleCols} cols from ${totalRows} × ${totalCols}`);\r\n        \r\n        // Create a composite range with headers, sample middle, and footers\r\n        const ranges = [];\r\n        \r\n        // Headers\r\n        if (headerRows > 0) {\r\n            const startCol = this.getColumnLetter(1);\r\n            const endCol = this.getColumnLetter(sampleCols);\r\n            ranges.push(`${startCol}1:${endCol}${headerRows}`);\r\n        }\r\n        \r\n        // Sample middle rows\r\n        if (middleRows > 0) {\r\n            const step = Math.floor((totalRows - headerRows - footerRows) / middleRows);\r\n            for (let i = 0; i < middleRows; i++) {\r\n                const rowNum = headerRows + 1 + (i * step);\r\n                const startCol = this.getColumnLetter(1);\r\n                const endCol = this.getColumnLetter(sampleCols);\r\n                ranges.push(`${startCol}${rowNum}:${endCol}${rowNum}`);\r\n            }\r\n        }\r\n        \r\n        // Footer rows\r\n        if (footerRows > 0) {\r\n            const startRow = totalRows - footerRows + 1;\r\n            const startCol = this.getColumnLetter(1);\r\n            const endCol = this.getColumnLetter(sampleCols);\r\n            ranges.push(`${startCol}${startRow}:${endCol}${totalRows}`);\r\n        }\r\n        \r\n        // For now, return a simplified range (top-left portion)\r\n        // TODO: Implement true composite range sampling\r\n        const simplifiedEndCol = this.getColumnLetter(sampleCols);\r\n        const simplifiedRange = worksheet.getRange(`A1:${simplifiedEndCol}${maxSampleRows}`);\r\n        simplifiedRange.load(['values', 'formulas', 'rowCount', 'columnCount', 'address', 'numberFormat']);\r\n        await context.sync();\r\n        \r\n        simplifiedRange._isSampled = true;\r\n        simplifiedRange._originalSize = { rows: totalRows, cols: totalCols };\r\n        \r\n        return simplifiedRange;\r\n    }\r\n\r\n    // Detect named ranges in the workbook\r\n    async detectNamedRanges(context) {\r\n        try {\r\n            const namedItems = context.workbook.names;\r\n            namedItems.load(['name', 'type']);\r\n            await context.sync();\r\n            return namedItems.items.length > 0;\r\n        } catch (error) {\r\n            console.log('Could not detect named ranges:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Analyze workbook structure across all sheets\r\n    async analyzeWorkbookStructure(context) {\r\n        try {\r\n            const worksheets = context.workbook.worksheets;\r\n            worksheets.load(['name', 'position']);\r\n            await context.sync();\r\n            \r\n            const sheetInfo = [];\r\n            for (const sheet of worksheets.items) {\r\n                const usedRange = sheet.getUsedRange();\r\n                if (usedRange) {\r\n                    usedRange.load(['rowCount', 'columnCount', 'address']);\r\n                    await context.sync();\r\n                    \r\n                    sheetInfo.push({\r\n                        name: sheet.name,\r\n                        position: sheet.position,\r\n                        dataRange: usedRange.address,\r\n                        rowCount: usedRange.rowCount,\r\n                        columnCount: usedRange.columnCount,\r\n                        totalCells: usedRange.rowCount * usedRange.columnCount\r\n                    });\r\n                } else {\r\n                    sheetInfo.push({\r\n                        name: sheet.name,\r\n                        position: sheet.position,\r\n                        dataRange: 'Empty',\r\n                        rowCount: 0,\r\n                        columnCount: 0,\r\n                        totalCells: 0\r\n                    });\r\n                }\r\n            }\r\n            \r\n            return {\r\n                totalSheets: worksheets.items.length,\r\n                sheets: sheetInfo,\r\n                totalDataCells: sheetInfo.reduce((sum, sheet) => sum + sheet.totalCells, 0)\r\n            };\r\n        } catch (error) {\r\n            console.log('Could not analyze workbook structure:', error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // Advanced table structure analysis with formulas and formatting\r\n    analyzeAdvancedTableStructure(rawValues, rawFormulas, numberFormats) {\r\n        if (!rawValues || rawValues.length === 0) {\r\n            return { type: 'empty', headers: [], dataRows: [], keyRows: [] };\r\n        }\r\n        \r\n        const result = {\r\n            type: 'advanced_financial_table',\r\n            headers: [],\r\n            columnHeaders: [],\r\n            dataRows: [],\r\n            keyRows: [],\r\n            totalRows: [],\r\n            quarterlyData: [],\r\n            rowLabels: [],\r\n            formulaAnalysis: this.analyzeFormulas(rawFormulas),\r\n            formatAnalysis: this.analyzeNumberFormats(numberFormats),\r\n            dataTypes: this.analyzeDataTypes(rawValues, numberFormats)\r\n        };\r\n        \r\n        // Clean and process data with type detection\r\n        const cleanData = rawValues.map((row, rowIndex) => \r\n            row.map((cell, colIndex) => {\r\n                if (cell === null || cell === undefined) return '';\r\n                if (typeof cell === 'string') return cell.trim();\r\n                \r\n                // Enhanced data type detection\r\n                const format = numberFormats && numberFormats[rowIndex] && numberFormats[rowIndex][colIndex];\r\n                return {\r\n                    value: cell,\r\n                    originalType: typeof cell,\r\n                    format: format,\r\n                    isFormula: rawFormulas && rawFormulas[rowIndex] && rawFormulas[rowIndex][colIndex] && \r\n                              typeof rawFormulas[rowIndex][colIndex] === 'string' && \r\n                              rawFormulas[rowIndex][colIndex].startsWith('='),\r\n                    detectedType: this.detectCellType(cell, format)\r\n                };\r\n            })\r\n        );\r\n        \r\n        // Find header row with enhanced detection\r\n        let headerRowIndex = this.findHeaderRow(cleanData);\r\n        console.log(`Header detection: Found header at row ${headerRowIndex}`);\r\n        console.log(`Sample data preview:`, cleanData.slice(0, 3).map((row, i) => \r\n            `Row ${i}: [${row.slice(0, 5).map(cell => typeof cell === 'object' ? cell.value : cell).join(', ')}]`\r\n        ));\r\n        \r\n        if (headerRowIndex !== -1) {\r\n            result.columnHeaders = cleanData[headerRowIndex].map(cell => \r\n                typeof cell === 'object' ? cell.value : cell\r\n            );\r\n        }\r\n        \r\n        // Process data rows with enhanced analysis (including header row)\r\n        console.log(`Processing ALL data rows starting from row 0 (including header)`);\r\n        for (let i = 0; i < cleanData.length; i++) {\r\n            const row = cleanData[i];\r\n            const rowLabel = typeof row[0] === 'object' ? row[0].value : row[0];\r\n            \r\n            if (!rowLabel || rowLabel === '') continue;\r\n            \r\n            const rowValues = row.slice(1).map(cell => \r\n                typeof cell === 'object' ? cell.value : cell\r\n            );\r\n            \r\n            const rowData = {\r\n                rowIndex: i,\r\n                label: rowLabel,\r\n                values: rowValues,\r\n                originalRow: row, // Keep enhanced data\r\n                isTotal: this.isLikelyTotalRow(rowLabel),\r\n                isSubtotal: this.isLikelySubtotalRow(rowLabel),\r\n                category: this.categorizeRowLabel(rowLabel),\r\n                hasFormulas: row.some(cell => \r\n                    typeof cell === 'object' && cell.isFormula\r\n                ),\r\n                dataTypes: row.map(cell => \r\n                    typeof cell === 'object' ? cell.detectedType : 'text'\r\n                )\r\n            };\r\n            \r\n            result.dataRows.push(rowData);\r\n            result.rowLabels.push(rowLabel);\r\n            \r\n            // Enhanced key row identification\r\n            if (rowData.isTotal || this.isKeyFinancialRow(rowLabel)) {\r\n                result.keyRows.push(rowData);\r\n            }\r\n            \r\n            if (rowData.isTotal) {\r\n                result.totalRows.push(rowData);\r\n            }\r\n            \r\n            // Extract quarterly data with enhanced detection\r\n            if (this.hasQuarterlyPattern(result.columnHeaders)) {\r\n                const quarterlyRow = this.extractQuarterlyData(rowData, result.columnHeaders);\r\n                if (quarterlyRow.quarters.length > 0) {\r\n                    result.quarterlyData.push(quarterlyRow);\r\n                }\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    // Analyze formulas in the dataset\r\n    analyzeFormulas(rawFormulas) {\r\n        if (!rawFormulas) return { hasFormulas: false, formulaCount: 0, types: [] };\r\n        \r\n        let formulaCount = 0;\r\n        const formulaTypes = new Set();\r\n        \r\n        rawFormulas.forEach(row => {\r\n            row.forEach(cell => {\r\n                if (typeof cell === 'string' && cell.startsWith('=')) {\r\n                    formulaCount++;\r\n                    // Extract function names\r\n                    const matches = cell.match(/([A-Z]+)\\(/g);\r\n                    if (matches) {\r\n                        matches.forEach(match => {\r\n                            formulaTypes.add(match.slice(0, -1)); // Remove the '('\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        \r\n        return {\r\n            hasFormulas: formulaCount > 0,\r\n            formulaCount: formulaCount,\r\n            types: Array.from(formulaTypes)\r\n        };\r\n    }\r\n\r\n    // Analyze number formats\r\n    analyzeNumberFormats(numberFormats) {\r\n        if (!numberFormats) return { hasFormatting: false, types: [] };\r\n        \r\n        const formatTypes = new Set();\r\n        \r\n        numberFormats.forEach(row => {\r\n            row.forEach(format => {\r\n                if (format && format !== 'General') {\r\n                    formatTypes.add(format);\r\n                }\r\n            });\r\n        });\r\n        \r\n        return {\r\n            hasFormatting: formatTypes.size > 0,\r\n            types: Array.from(formatTypes)\r\n        };\r\n    }\r\n\r\n    // Enhanced data type detection\r\n    analyzeDataTypes(rawValues, numberFormats) {\r\n        const types = { text: 0, number: 0, date: 0, currency: 0, percentage: 0, boolean: 0 };\r\n        \r\n        rawValues.forEach((row, rowIndex) => {\r\n            row.forEach((cell, colIndex) => {\r\n                const format = numberFormats && numberFormats[rowIndex] && numberFormats[rowIndex][colIndex];\r\n                const detectedType = this.detectCellType(cell, format);\r\n                if (types.hasOwnProperty(detectedType)) {\r\n                    types[detectedType]++;\r\n                }\r\n            });\r\n        });\r\n        \r\n        return types;\r\n    }\r\n\r\n    // Detect individual cell type\r\n    detectCellType(value, format) {\r\n        if (value === null || value === undefined || value === '') return 'empty';\r\n        \r\n        if (typeof value === 'boolean') return 'boolean';\r\n        if (typeof value === 'number') {\r\n            if (format) {\r\n                if (format.includes('$') || format.includes('currency')) return 'currency';\r\n                if (format.includes('%')) return 'percentage';\r\n                if (format.includes('d') || format.includes('m') || format.includes('y')) return 'date';\r\n            }\r\n            return 'number';\r\n        }\r\n        \r\n        if (typeof value === 'string') {\r\n            // Try to detect dates\r\n            if (!isNaN(Date.parse(value))) return 'date';\r\n            // Try to detect numbers\r\n            if (!isNaN(parseFloat(value)) && isFinite(value)) return 'number';\r\n        }\r\n        \r\n        return 'text';\r\n    }\r\n\r\n    // Enhanced header row detection\r\n    findHeaderRow(cleanData) {\r\n        for (let i = 0; i < Math.min(5, cleanData.length); i++) {\r\n            const row = cleanData[i];\r\n            \r\n            // Look for quarterly patterns\r\n            const quarterlyPattern = row.filter(cell => {\r\n                const val = typeof cell === 'object' ? cell.value : cell;\r\n                return typeof val === 'string' && /^[1-4]Q\\d{2}$/i.test(val);\r\n            }).length;\r\n            \r\n            if (quarterlyPattern >= 2) return i;\r\n            \r\n            // Look for text-heavy rows (potential headers)\r\n            const textCellCount = row.filter(cell => {\r\n                const val = typeof cell === 'object' ? cell.value : cell;\r\n                return typeof val === 'string' && val.length > 0 && isNaN(val);\r\n            }).length;\r\n            \r\n            if (textCellCount >= 3) return i;\r\n        }\r\n        \r\n        return 0; // Default to first row\r\n    }\r\n\r\n    // Enhanced financial row detection\r\n    isKeyFinancialRow(label) {\r\n        if (typeof label !== 'string') return false;\r\n        \r\n        const keyPatterns = [\r\n            /revenue|sales|income/i,\r\n            /expense|cost|opex|capex/i,\r\n            /profit|loss|ebitda|ebit/i,\r\n            /cash|flow|fcf/i,\r\n            /margin|ratio/i,\r\n            /growth|change/i\r\n        ];\r\n        \r\n        return keyPatterns.some(pattern => pattern.test(label));\r\n    }\r\n\r\n    // Check for quarterly patterns in headers\r\n    hasQuarterlyPattern(headers) {\r\n        return headers.some(h => /^[1-4]Q\\d{2}$/i.test(String(h)));\r\n    }\r\n\r\n    // Generate comprehensive data summary\r\n    generateDataSummary(worksheetName, address, range, isSelection, isSampled, structuredData, dataMetadata) {\r\n        let summary = `${isSelection ? 'Selected range' : 'Worksheet'} \"${isSelection ? address : worksheetName}\" `;\r\n        summary += `contains ${range.rowCount} rows and ${range.columnCount} columns`;\r\n        \r\n        if (isSampled) {\r\n            const originalSize = range._originalSize;\r\n            if (originalSize) {\r\n                summary += ` (sampled from ${originalSize.rows} × ${originalSize.cols})`;\r\n            } else {\r\n                summary += ' (intelligently sampled)';\r\n            }\r\n        }\r\n        \r\n        // Add structure information\r\n        if (structuredData.keyRows && structuredData.keyRows.length > 0) {\r\n            summary += `. Found ${structuredData.keyRows.length} key financial rows`;\r\n        }\r\n        \r\n        if (structuredData.quarterlyData && structuredData.quarterlyData.length > 0) {\r\n            summary += `, ${structuredData.quarterlyData.length} quarterly data series`;\r\n        }\r\n        \r\n        // Add metadata\r\n        if (dataMetadata.tables && dataMetadata.tables.length > 0) {\r\n            summary += `, ${dataMetadata.tables.length} Excel tables`;\r\n        }\r\n        \r\n        if (dataMetadata.pivotTables && dataMetadata.pivotTables.length > 0) {\r\n            summary += `, ${dataMetadata.pivotTables.length} pivot tables`;\r\n        }\r\n        \r\n        if (dataMetadata.charts && dataMetadata.charts.length > 0) {\r\n            summary += `, ${dataMetadata.charts.length} charts`;\r\n        }\r\n        \r\n        summary += '.';\r\n        \r\n        return summary;\r\n    }\r\n\r\n    // Helper functions (keeping existing ones and adding new ones)\r\n    isLikelyTotalRow(label) {\r\n        if (typeof label !== 'string') return false;\r\n        const totalKeywords = /^(total|sum|grand total|net|aggregate|consolidated)/i;\r\n        return totalKeywords.test(label.trim());\r\n    }\r\n\r\n    isLikelySubtotalRow(label) {\r\n        if (typeof label !== 'string') return false;\r\n        const subtotalKeywords = /subtotal|sub-total|sub total/i;\r\n        return subtotalKeywords.test(label.trim());\r\n    }\r\n\r\n    categorizeRowLabel(label) {\r\n        if (typeof label !== 'string') return 'data';\r\n        return label.trim();\r\n    }\r\n\r\n    extractQuarterlyData(rowData, headers) {\r\n        const quarters = [];\r\n        \r\n        headers.forEach((header, index) => {\r\n            if (typeof header === 'string' && /^[1-4]Q\\d{2}$/i.test(header)) {\r\n                const value = rowData.values[index - 1]; // -1 because values excludes label column\r\n                if (value !== null && value !== undefined && value !== '') {\r\n                    quarters.push({\r\n                        quarter: header,\r\n                        value: parseFloat(value) || value,\r\n                        columnIndex: index\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        \r\n        return {\r\n            label: rowData.label,\r\n            labelType: rowData.category,\r\n            quarters: quarters,\r\n            isTotal: rowData.isTotal\r\n        };\r\n    }\r\n\r\n    // Utility functions for Excel column manipulation\r\n    getColumnLetter(columnNumber) {\r\n        let columnLetter = '';\r\n        while (columnNumber > 0) {\r\n            const remainder = (columnNumber - 1) % 26;\r\n            columnLetter = String.fromCharCode(65 + remainder) + columnLetter;\r\n            columnNumber = Math.floor((columnNumber - 1) / 26);\r\n        }\r\n        return columnLetter;\r\n    }\r\n\r\n    getColumnNumber(columnLetter) {\r\n        let columnNumber = 0;\r\n        for (let i = 0; i < columnLetter.length; i++) {\r\n            columnNumber = columnNumber * 26 + (columnLetter.charCodeAt(i) - 64);\r\n        }\r\n        return columnNumber;\r\n    }\r\n\r\n    // New method to read multiple worksheets\r\n    async readAllWorksheets() {\r\n        return new Promise((resolve, reject) => {\r\n            Excel.run(async (context) => {\r\n                try {\r\n                    const workbookData = await this.analyzeWorkbookStructure(context);\r\n                    const allSheetsData = [];\r\n                    \r\n                    const worksheets = context.workbook.worksheets;\r\n                    worksheets.load(['name']);\r\n                    await context.sync();\r\n                    \r\n                    for (const sheet of worksheets.items) {\r\n                        try {\r\n                            context.workbook.worksheets.getItem(sheet.name).activate();\r\n                            await context.sync();\r\n                            \r\n                            const sheetData = await this.readCurrentWorksheetDataEnhanced(false, false);\r\n                            allSheetsData.push(sheetData);\r\n                        } catch (error) {\r\n                            console.log(`Error reading sheet ${sheet.name}:`, error);\r\n                            allSheetsData.push({\r\n                                worksheetName: sheet.name,\r\n                                error: error.message,\r\n                                structuredData: { type: 'error' }\r\n                            });\r\n                        }\r\n                    }\r\n                    \r\n                    resolve({\r\n                        workbookData: workbookData,\r\n                        allSheets: allSheetsData,\r\n                        summary: `Read ${allSheetsData.length} worksheets from workbook`\r\n                    });\r\n                    \r\n                } catch (error) {\r\n                    reject(new Error('Failed to read all worksheets: ' + error.message));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Getter for current worksheet data\r\n    getCurrentWorksheetData() {\r\n        return this.currentWorksheetData;\r\n    }\r\n\r\n    // Clear current data\r\n    clearCurrentData() {\r\n        this.currentWorksheetData = null;\r\n        this.workbookStructure = null;\r\n    }\r\n}\r\n\r\n// Export for use in other modules\r\nif (typeof window !== 'undefined') {\r\n    window.DataService = DataService;\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/**\n * Contains the list of OpenAPI data types\n * as defined by https://swagger.io/docs/specification/data-models/data-types/\n * @public\n */\nvar SchemaType;\n(function (SchemaType) {\n    /** String type. */\n    SchemaType[\"STRING\"] = \"string\";\n    /** Number type. */\n    SchemaType[\"NUMBER\"] = \"number\";\n    /** Integer type. */\n    SchemaType[\"INTEGER\"] = \"integer\";\n    /** Boolean type. */\n    SchemaType[\"BOOLEAN\"] = \"boolean\";\n    /** Array type. */\n    SchemaType[\"ARRAY\"] = \"array\";\n    /** Object type. */\n    SchemaType[\"OBJECT\"] = \"object\";\n})(SchemaType || (SchemaType = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @public\n */\nvar ExecutableCodeLanguage;\n(function (ExecutableCodeLanguage) {\n    ExecutableCodeLanguage[\"LANGUAGE_UNSPECIFIED\"] = \"language_unspecified\";\n    ExecutableCodeLanguage[\"PYTHON\"] = \"python\";\n})(ExecutableCodeLanguage || (ExecutableCodeLanguage = {}));\n/**\n * Possible outcomes of code execution.\n * @public\n */\nvar Outcome;\n(function (Outcome) {\n    /**\n     * Unspecified status. This value should not be used.\n     */\n    Outcome[\"OUTCOME_UNSPECIFIED\"] = \"outcome_unspecified\";\n    /**\n     * Code execution completed successfully.\n     */\n    Outcome[\"OUTCOME_OK\"] = \"outcome_ok\";\n    /**\n     * Code execution finished but with a failure. `stderr` should contain the\n     * reason.\n     */\n    Outcome[\"OUTCOME_FAILED\"] = \"outcome_failed\";\n    /**\n     * Code execution ran for too long, and was cancelled. There may or may not\n     * be a partial output present.\n     */\n    Outcome[\"OUTCOME_DEADLINE_EXCEEDED\"] = \"outcome_deadline_exceeded\";\n})(Outcome || (Outcome = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Possible roles.\n * @public\n */\nconst POSSIBLE_ROLES = [\"user\", \"model\", \"function\", \"system\"];\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nvar HarmCategory;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n    HarmCategory[\"HARM_CATEGORY_CIVIC_INTEGRITY\"] = \"HARM_CATEGORY_CIVIC_INTEGRITY\";\n})(HarmCategory || (HarmCategory = {}));\n/**\n * Threshold above which a prompt or candidate will be blocked.\n * @public\n */\nvar HarmBlockThreshold;\n(function (HarmBlockThreshold) {\n    /** Threshold is unspecified. */\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    /** Content with NEGLIGIBLE will be allowed. */\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    /** Content with NEGLIGIBLE and LOW will be allowed. */\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    /** Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed. */\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    /** All content will be allowed. */\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(HarmBlockThreshold || (HarmBlockThreshold = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nvar HarmProbability;\n(function (HarmProbability) {\n    /** Probability is unspecified. */\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    /** Content has a negligible chance of being unsafe. */\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    /** Content has a low chance of being unsafe. */\n    HarmProbability[\"LOW\"] = \"LOW\";\n    /** Content has a medium chance of being unsafe. */\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    /** Content has a high chance of being unsafe. */\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(HarmProbability || (HarmProbability = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nvar BlockReason;\n(function (BlockReason) {\n    // A blocked reason was not specified.\n    BlockReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    // Content was blocked by safety settings.\n    BlockReason[\"SAFETY\"] = \"SAFETY\";\n    // Content was blocked, but the reason is uncategorized.\n    BlockReason[\"OTHER\"] = \"OTHER\";\n})(BlockReason || (BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nvar FinishReason;\n(function (FinishReason) {\n    // Default value. This value is unused.\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    // Natural stop point of the model or provided stop sequence.\n    FinishReason[\"STOP\"] = \"STOP\";\n    // The maximum number of tokens as specified in the request was reached.\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    // The candidate content was flagged for safety reasons.\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    // The candidate content was flagged for recitation reasons.\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    // The candidate content was flagged for using an unsupported language.\n    FinishReason[\"LANGUAGE\"] = \"LANGUAGE\";\n    // Token generation stopped because the content contains forbidden terms.\n    FinishReason[\"BLOCKLIST\"] = \"BLOCKLIST\";\n    // Token generation stopped for potentially containing prohibited content.\n    FinishReason[\"PROHIBITED_CONTENT\"] = \"PROHIBITED_CONTENT\";\n    // Token generation stopped because the content potentially contains Sensitive Personally Identifiable Information (SPII).\n    FinishReason[\"SPII\"] = \"SPII\";\n    // The function call generated by the model is invalid.\n    FinishReason[\"MALFORMED_FUNCTION_CALL\"] = \"MALFORMED_FUNCTION_CALL\";\n    // Unknown reason.\n    FinishReason[\"OTHER\"] = \"OTHER\";\n})(FinishReason || (FinishReason = {}));\n/**\n * Task type for embedding content.\n * @public\n */\nvar TaskType;\n(function (TaskType) {\n    TaskType[\"TASK_TYPE_UNSPECIFIED\"] = \"TASK_TYPE_UNSPECIFIED\";\n    TaskType[\"RETRIEVAL_QUERY\"] = \"RETRIEVAL_QUERY\";\n    TaskType[\"RETRIEVAL_DOCUMENT\"] = \"RETRIEVAL_DOCUMENT\";\n    TaskType[\"SEMANTIC_SIMILARITY\"] = \"SEMANTIC_SIMILARITY\";\n    TaskType[\"CLASSIFICATION\"] = \"CLASSIFICATION\";\n    TaskType[\"CLUSTERING\"] = \"CLUSTERING\";\n})(TaskType || (TaskType = {}));\n/**\n * @public\n */\nvar FunctionCallingMode;\n(function (FunctionCallingMode) {\n    // Unspecified function calling mode. This value should not be used.\n    FunctionCallingMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Default model behavior, model decides to predict either a function call\n    // or a natural language repspose.\n    FunctionCallingMode[\"AUTO\"] = \"AUTO\";\n    // Model is constrained to always predicting a function call only.\n    // If \"allowed_function_names\" are set, the predicted function call will be\n    // limited to any one of \"allowed_function_names\", else the predicted\n    // function call will be any one of the provided \"function_declarations\".\n    FunctionCallingMode[\"ANY\"] = \"ANY\";\n    // Model will not predict any function call. Model behavior is same as when\n    // not passing any function declarations.\n    FunctionCallingMode[\"NONE\"] = \"NONE\";\n})(FunctionCallingMode || (FunctionCallingMode = {}));\n/**\n * The mode of the predictor to be used in dynamic retrieval.\n * @public\n */\nvar DynamicRetrievalMode;\n(function (DynamicRetrievalMode) {\n    // Unspecified function calling mode. This value should not be used.\n    DynamicRetrievalMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Run retrieval only when system decides it is necessary.\n    DynamicRetrievalMode[\"MODE_DYNAMIC\"] = \"MODE_DYNAMIC\";\n})(DynamicRetrievalMode || (DynamicRetrievalMode = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Basic error type for this SDK.\n * @public\n */\nclass GoogleGenerativeAIError extends Error {\n    constructor(message) {\n        super(`[GoogleGenerativeAI Error]: ${message}`);\n    }\n}\n/**\n * Errors in the contents of a response from the model. This includes parsing\n * errors, or responses including a safety block reason.\n * @public\n */\nclass GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\n/**\n * Error class covering HTTP errors when calling the server. Includes HTTP\n * status, statusText, and optional details, if provided in the server response.\n * @public\n */\nclass GoogleGenerativeAIFetchError extends GoogleGenerativeAIError {\n    constructor(message, status, statusText, errorDetails) {\n        super(message);\n        this.status = status;\n        this.statusText = statusText;\n        this.errorDetails = errorDetails;\n    }\n}\n/**\n * Errors in the contents of a request originating from user input.\n * @public\n */\nclass GoogleGenerativeAIRequestInputError extends GoogleGenerativeAIError {\n}\n/**\n * Error thrown when a request is aborted, either due to a timeout or\n * intentional cancellation by the user.\n * @public\n */\nclass GoogleGenerativeAIAbortError extends GoogleGenerativeAIError {\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_BASE_URL = \"https://generativelanguage.googleapis.com\";\nconst DEFAULT_API_VERSION = \"v1beta\";\n/**\n * We can't `require` package.json if this runs on web. We will use rollup to\n * swap in the version number here at build time.\n */\nconst PACKAGE_VERSION = \"0.24.1\";\nconst PACKAGE_LOG_HEADER = \"genai-js\";\nvar Task;\n(function (Task) {\n    Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n    Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n    Task[\"COUNT_TOKENS\"] = \"countTokens\";\n    Task[\"EMBED_CONTENT\"] = \"embedContent\";\n    Task[\"BATCH_EMBED_CONTENTS\"] = \"batchEmbedContents\";\n})(Task || (Task = {}));\nclass RequestUrl {\n    constructor(model, task, apiKey, stream, requestOptions) {\n        this.model = model;\n        this.task = task;\n        this.apiKey = apiKey;\n        this.stream = stream;\n        this.requestOptions = requestOptions;\n    }\n    toString() {\n        var _a, _b;\n        const apiVersion = ((_a = this.requestOptions) === null || _a === void 0 ? void 0 : _a.apiVersion) || DEFAULT_API_VERSION;\n        const baseUrl = ((_b = this.requestOptions) === null || _b === void 0 ? void 0 : _b.baseUrl) || DEFAULT_BASE_URL;\n        let url = `${baseUrl}/${apiVersion}/${this.model}:${this.task}`;\n        if (this.stream) {\n            url += \"?alt=sse\";\n        }\n        return url;\n    }\n}\n/**\n * Simple, but may become more complex if we add more versions to log.\n */\nfunction getClientHeaders(requestOptions) {\n    const clientHeaders = [];\n    if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.apiClient) {\n        clientHeaders.push(requestOptions.apiClient);\n    }\n    clientHeaders.push(`${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}`);\n    return clientHeaders.join(\" \");\n}\nasync function getHeaders(url) {\n    var _a;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"x-goog-api-client\", getClientHeaders(url.requestOptions));\n    headers.append(\"x-goog-api-key\", url.apiKey);\n    let customHeaders = (_a = url.requestOptions) === null || _a === void 0 ? void 0 : _a.customHeaders;\n    if (customHeaders) {\n        if (!(customHeaders instanceof Headers)) {\n            try {\n                customHeaders = new Headers(customHeaders);\n            }\n            catch (e) {\n                throw new GoogleGenerativeAIRequestInputError(`unable to convert customHeaders value ${JSON.stringify(customHeaders)} to Headers: ${e.message}`);\n            }\n        }\n        for (const [headerName, headerValue] of customHeaders.entries()) {\n            if (headerName === \"x-goog-api-key\") {\n                throw new GoogleGenerativeAIRequestInputError(`Cannot set reserved header name ${headerName}`);\n            }\n            else if (headerName === \"x-goog-api-client\") {\n                throw new GoogleGenerativeAIRequestInputError(`Header name ${headerName} can only be set using the apiClient field`);\n            }\n            headers.append(headerName, headerValue);\n        }\n    }\n    return headers;\n}\nasync function constructModelRequest(model, task, apiKey, stream, body, requestOptions) {\n    const url = new RequestUrl(model, task, apiKey, stream, requestOptions);\n    return {\n        url: url.toString(),\n        fetchOptions: Object.assign(Object.assign({}, buildFetchOptions(requestOptions)), { method: \"POST\", headers: await getHeaders(url), body }),\n    };\n}\nasync function makeModelRequest(model, task, apiKey, stream, body, requestOptions = {}, \n// Allows this to be stubbed for tests\nfetchFn = fetch) {\n    const { url, fetchOptions } = await constructModelRequest(model, task, apiKey, stream, body, requestOptions);\n    return makeRequest(url, fetchOptions, fetchFn);\n}\nasync function makeRequest(url, fetchOptions, fetchFn = fetch) {\n    let response;\n    try {\n        response = await fetchFn(url, fetchOptions);\n    }\n    catch (e) {\n        handleResponseError(e, url);\n    }\n    if (!response.ok) {\n        await handleResponseNotOk(response, url);\n    }\n    return response;\n}\nfunction handleResponseError(e, url) {\n    let err = e;\n    if (err.name === \"AbortError\") {\n        err = new GoogleGenerativeAIAbortError(`Request aborted when fetching ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n    }\n    else if (!(e instanceof GoogleGenerativeAIFetchError ||\n        e instanceof GoogleGenerativeAIRequestInputError)) {\n        err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n    }\n    throw err;\n}\nasync function handleResponseNotOk(response, url) {\n    let message = \"\";\n    let errorDetails;\n    try {\n        const json = await response.json();\n        message = json.error.message;\n        if (json.error.details) {\n            message += ` ${JSON.stringify(json.error.details)}`;\n            errorDetails = json.error.details;\n        }\n    }\n    catch (e) {\n        // ignored\n    }\n    throw new GoogleGenerativeAIFetchError(`Error fetching from ${url.toString()}: [${response.status} ${response.statusText}] ${message}`, response.status, response.statusText, errorDetails);\n}\n/**\n * Generates the request options to be passed to the fetch API.\n * @param requestOptions - The user-defined request options.\n * @returns The generated request options.\n */\nfunction buildFetchOptions(requestOptions) {\n    const fetchOptions = {};\n    if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.signal) !== undefined || (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n        const controller = new AbortController();\n        if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n            setTimeout(() => controller.abort(), requestOptions.timeout);\n        }\n        if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.signal) {\n            requestOptions.signal.addEventListener(\"abort\", () => {\n                controller.abort();\n            });\n        }\n        fetchOptions.signal = controller.signal;\n    }\n    return fetchOptions;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nfunction addHelpers(response) {\n    response.text = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning text from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getText(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return \"\";\n    };\n    /**\n     * TODO: remove at next major version\n     */\n    response.functionCall = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            console.warn(`response.functionCall() is deprecated. ` +\n                `Use response.functionCalls() instead.`);\n            return getFunctionCalls(response)[0];\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    response.functionCalls = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getFunctionCalls(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    return response;\n}\n/**\n * Returns all text found in all parts of first candidate.\n */\nfunction getText(response) {\n    var _a, _b, _c, _d;\n    const textStrings = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.text) {\n                textStrings.push(part.text);\n            }\n            if (part.executableCode) {\n                textStrings.push(\"\\n```\" +\n                    part.executableCode.language +\n                    \"\\n\" +\n                    part.executableCode.code +\n                    \"\\n```\\n\");\n            }\n            if (part.codeExecutionResult) {\n                textStrings.push(\"\\n```\\n\" + part.codeExecutionResult.output + \"\\n```\\n\");\n            }\n        }\n    }\n    if (textStrings.length > 0) {\n        return textStrings.join(\"\");\n    }\n    else {\n        return \"\";\n    }\n}\n/**\n * Returns functionCall of first candidate.\n */\nfunction getFunctionCalls(response) {\n    var _a, _b, _c, _d;\n    const functionCalls = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.functionCall) {\n                functionCalls.push(part.functionCall);\n            }\n        }\n    }\n    if (functionCalls.length > 0) {\n        return functionCalls;\n    }\n    else {\n        return undefined;\n    }\n}\nconst badFinishReasons = [\n    FinishReason.RECITATION,\n    FinishReason.SAFETY,\n    FinishReason.LANGUAGE,\n];\nfunction hadBadFinishReason(candidate) {\n    return (!!candidate.finishReason &&\n        badFinishReasons.includes(candidate.finishReason));\n}\nfunction formatBlockErrorMessage(response) {\n    var _a, _b, _c;\n    let message = \"\";\n    if ((!response.candidates || response.candidates.length === 0) &&\n        response.promptFeedback) {\n        message += \"Response was blocked\";\n        if ((_a = response.promptFeedback) === null || _a === void 0 ? void 0 : _a.blockReason) {\n            message += ` due to ${response.promptFeedback.blockReason}`;\n        }\n        if ((_b = response.promptFeedback) === null || _b === void 0 ? void 0 : _b.blockReasonMessage) {\n            message += `: ${response.promptFeedback.blockReasonMessage}`;\n        }\n    }\n    else if ((_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0]) {\n        const firstCandidate = response.candidates[0];\n        if (hadBadFinishReason(firstCandidate)) {\n            message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n            if (firstCandidate.finishMessage) {\n                message += `: ${firstCandidate.finishMessage}`;\n            }\n        }\n    }\n    return message;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nfunction processStream(response) {\n    const inputStream = response.body.pipeThrough(new TextDecoderStream(\"utf8\", { fatal: true }));\n    const responseStream = getResponseStream(inputStream);\n    const [stream1, stream2] = responseStream.tee();\n    return {\n        stream: generateResponseSequence(stream1),\n        response: getResponsePromise(stream2),\n    };\n}\nasync function getResponsePromise(stream) {\n    const allResponses = [];\n    const reader = stream.getReader();\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            return addHelpers(aggregateResponses(allResponses));\n        }\n        allResponses.push(value);\n    }\n}\nfunction generateResponseSequence(stream) {\n    return __asyncGenerator(this, arguments, function* generateResponseSequence_1() {\n        const reader = stream.getReader();\n        while (true) {\n            const { value, done } = yield __await(reader.read());\n            if (done) {\n                break;\n            }\n            yield yield __await(addHelpers(value));\n        }\n    });\n}\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nfunction getResponseStream(inputStream) {\n    const reader = inputStream.getReader();\n    const stream = new ReadableStream({\n        start(controller) {\n            let currentText = \"\";\n            return pump();\n            function pump() {\n                return reader\n                    .read()\n                    .then(({ value, done }) => {\n                    if (done) {\n                        if (currentText.trim()) {\n                            controller.error(new GoogleGenerativeAIError(\"Failed to parse stream\"));\n                            return;\n                        }\n                        controller.close();\n                        return;\n                    }\n                    currentText += value;\n                    let match = currentText.match(responseLineRE);\n                    let parsedResponse;\n                    while (match) {\n                        try {\n                            parsedResponse = JSON.parse(match[1]);\n                        }\n                        catch (e) {\n                            controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match[1]}\"`));\n                            return;\n                        }\n                        controller.enqueue(parsedResponse);\n                        currentText = currentText.substring(match[0].length);\n                        match = currentText.match(responseLineRE);\n                    }\n                    return pump();\n                })\n                    .catch((e) => {\n                    let err = e;\n                    err.stack = e.stack;\n                    if (err.name === \"AbortError\") {\n                        err = new GoogleGenerativeAIAbortError(\"Request aborted when reading from the stream\");\n                    }\n                    else {\n                        err = new GoogleGenerativeAIError(\"Error reading from the stream\");\n                    }\n                    throw err;\n                });\n            }\n        },\n    });\n    return stream;\n}\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nfunction aggregateResponses(responses) {\n    const lastResponse = responses[responses.length - 1];\n    const aggregatedResponse = {\n        promptFeedback: lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.promptFeedback,\n    };\n    for (const response of responses) {\n        if (response.candidates) {\n            let candidateIndex = 0;\n            for (const candidate of response.candidates) {\n                if (!aggregatedResponse.candidates) {\n                    aggregatedResponse.candidates = [];\n                }\n                if (!aggregatedResponse.candidates[candidateIndex]) {\n                    aggregatedResponse.candidates[candidateIndex] = {\n                        index: candidateIndex,\n                    };\n                }\n                // Keep overwriting, the last one will be final\n                aggregatedResponse.candidates[candidateIndex].citationMetadata =\n                    candidate.citationMetadata;\n                aggregatedResponse.candidates[candidateIndex].groundingMetadata =\n                    candidate.groundingMetadata;\n                aggregatedResponse.candidates[candidateIndex].finishReason =\n                    candidate.finishReason;\n                aggregatedResponse.candidates[candidateIndex].finishMessage =\n                    candidate.finishMessage;\n                aggregatedResponse.candidates[candidateIndex].safetyRatings =\n                    candidate.safetyRatings;\n                /**\n                 * Candidates should always have content and parts, but this handles\n                 * possible malformed responses.\n                 */\n                if (candidate.content && candidate.content.parts) {\n                    if (!aggregatedResponse.candidates[candidateIndex].content) {\n                        aggregatedResponse.candidates[candidateIndex].content = {\n                            role: candidate.content.role || \"user\",\n                            parts: [],\n                        };\n                    }\n                    const newPart = {};\n                    for (const part of candidate.content.parts) {\n                        if (part.text) {\n                            newPart.text = part.text;\n                        }\n                        if (part.functionCall) {\n                            newPart.functionCall = part.functionCall;\n                        }\n                        if (part.executableCode) {\n                            newPart.executableCode = part.executableCode;\n                        }\n                        if (part.codeExecutionResult) {\n                            newPart.codeExecutionResult = part.codeExecutionResult;\n                        }\n                        if (Object.keys(newPart).length === 0) {\n                            newPart.text = \"\";\n                        }\n                        aggregatedResponse.candidates[candidateIndex].content.parts.push(newPart);\n                    }\n                }\n            }\n            candidateIndex++;\n        }\n        if (response.usageMetadata) {\n            aggregatedResponse.usageMetadata = response.usageMetadata;\n        }\n    }\n    return aggregatedResponse;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateContentStream(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.STREAM_GENERATE_CONTENT, apiKey, \n    /* stream */ true, JSON.stringify(params), requestOptions);\n    return processStream(response);\n}\nasync function generateContent(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.GENERATE_CONTENT, apiKey, \n    /* stream */ false, JSON.stringify(params), requestOptions);\n    const responseJson = await response.json();\n    const enhancedResponse = addHelpers(responseJson);\n    return {\n        response: enhancedResponse,\n    };\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatSystemInstruction(input) {\n    // null or undefined\n    if (input == null) {\n        return undefined;\n    }\n    else if (typeof input === \"string\") {\n        return { role: \"system\", parts: [{ text: input }] };\n    }\n    else if (input.text) {\n        return { role: \"system\", parts: [input] };\n    }\n    else if (input.parts) {\n        if (!input.role) {\n            return { role: \"system\", parts: input.parts };\n        }\n        else {\n            return input;\n        }\n    }\n}\nfunction formatNewContent(request) {\n    let newParts = [];\n    if (typeof request === \"string\") {\n        newParts = [{ text: request }];\n    }\n    else {\n        for (const partOrString of request) {\n            if (typeof partOrString === \"string\") {\n                newParts.push({ text: partOrString });\n            }\n            else {\n                newParts.push(partOrString);\n            }\n        }\n    }\n    return assignRoleToPartsAndValidateSendMessageRequest(newParts);\n}\n/**\n * When multiple Part types (i.e. FunctionResponsePart and TextPart) are\n * passed in a single Part array, we may need to assign different roles to each\n * part. Currently only FunctionResponsePart requires a role other than 'user'.\n * @private\n * @param parts Array of parts to pass to the model\n * @returns Array of content items\n */\nfunction assignRoleToPartsAndValidateSendMessageRequest(parts) {\n    const userContent = { role: \"user\", parts: [] };\n    const functionContent = { role: \"function\", parts: [] };\n    let hasUserContent = false;\n    let hasFunctionContent = false;\n    for (const part of parts) {\n        if (\"functionResponse\" in part) {\n            functionContent.parts.push(part);\n            hasFunctionContent = true;\n        }\n        else {\n            userContent.parts.push(part);\n            hasUserContent = true;\n        }\n    }\n    if (hasUserContent && hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"Within a single message, FunctionResponse cannot be mixed with other type of part in the request for sending chat message.\");\n    }\n    if (!hasUserContent && !hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"No content is provided for sending chat message.\");\n    }\n    if (hasUserContent) {\n        return userContent;\n    }\n    return functionContent;\n}\nfunction formatCountTokensInput(params, modelParams) {\n    var _a;\n    let formattedGenerateContentRequest = {\n        model: modelParams === null || modelParams === void 0 ? void 0 : modelParams.model,\n        generationConfig: modelParams === null || modelParams === void 0 ? void 0 : modelParams.generationConfig,\n        safetySettings: modelParams === null || modelParams === void 0 ? void 0 : modelParams.safetySettings,\n        tools: modelParams === null || modelParams === void 0 ? void 0 : modelParams.tools,\n        toolConfig: modelParams === null || modelParams === void 0 ? void 0 : modelParams.toolConfig,\n        systemInstruction: modelParams === null || modelParams === void 0 ? void 0 : modelParams.systemInstruction,\n        cachedContent: (_a = modelParams === null || modelParams === void 0 ? void 0 : modelParams.cachedContent) === null || _a === void 0 ? void 0 : _a.name,\n        contents: [],\n    };\n    const containsGenerateContentRequest = params.generateContentRequest != null;\n    if (params.contents) {\n        if (containsGenerateContentRequest) {\n            throw new GoogleGenerativeAIRequestInputError(\"CountTokensRequest must have one of contents or generateContentRequest, not both.\");\n        }\n        formattedGenerateContentRequest.contents = params.contents;\n    }\n    else if (containsGenerateContentRequest) {\n        formattedGenerateContentRequest = Object.assign(Object.assign({}, formattedGenerateContentRequest), params.generateContentRequest);\n    }\n    else {\n        // Array or string\n        const content = formatNewContent(params);\n        formattedGenerateContentRequest.contents = [content];\n    }\n    return { generateContentRequest: formattedGenerateContentRequest };\n}\nfunction formatGenerateContentInput(params) {\n    let formattedRequest;\n    if (params.contents) {\n        formattedRequest = params;\n    }\n    else {\n        // Array or string\n        const content = formatNewContent(params);\n        formattedRequest = { contents: [content] };\n    }\n    if (params.systemInstruction) {\n        formattedRequest.systemInstruction = formatSystemInstruction(params.systemInstruction);\n    }\n    return formattedRequest;\n}\nfunction formatEmbedContentInput(params) {\n    if (typeof params === \"string\" || Array.isArray(params)) {\n        const content = formatNewContent(params);\n        return { content };\n    }\n    return params;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// https://ai.google.dev/api/rest/v1beta/Content#part\nconst VALID_PART_FIELDS = [\n    \"text\",\n    \"inlineData\",\n    \"functionCall\",\n    \"functionResponse\",\n    \"executableCode\",\n    \"codeExecutionResult\",\n];\nconst VALID_PARTS_PER_ROLE = {\n    user: [\"text\", \"inlineData\"],\n    function: [\"functionResponse\"],\n    model: [\"text\", \"functionCall\", \"executableCode\", \"codeExecutionResult\"],\n    // System instructions shouldn't be in history anyway.\n    system: [\"text\"],\n};\nfunction validateChatHistory(history) {\n    let prevContent = false;\n    for (const currContent of history) {\n        const { role, parts } = currContent;\n        if (!prevContent && role !== \"user\") {\n            throw new GoogleGenerativeAIError(`First content should be with role 'user', got ${role}`);\n        }\n        if (!POSSIBLE_ROLES.includes(role)) {\n            throw new GoogleGenerativeAIError(`Each item should include role field. Got ${role} but valid roles are: ${JSON.stringify(POSSIBLE_ROLES)}`);\n        }\n        if (!Array.isArray(parts)) {\n            throw new GoogleGenerativeAIError(\"Content should have 'parts' property with an array of Parts\");\n        }\n        if (parts.length === 0) {\n            throw new GoogleGenerativeAIError(\"Each Content should have at least one part\");\n        }\n        const countFields = {\n            text: 0,\n            inlineData: 0,\n            functionCall: 0,\n            functionResponse: 0,\n            fileData: 0,\n            executableCode: 0,\n            codeExecutionResult: 0,\n        };\n        for (const part of parts) {\n            for (const key of VALID_PART_FIELDS) {\n                if (key in part) {\n                    countFields[key] += 1;\n                }\n            }\n        }\n        const validParts = VALID_PARTS_PER_ROLE[role];\n        for (const key of VALID_PART_FIELDS) {\n            if (!validParts.includes(key) && countFields[key] > 0) {\n                throw new GoogleGenerativeAIError(`Content with role '${role}' can't contain '${key}' part`);\n            }\n        }\n        prevContent = true;\n    }\n}\n/**\n * Returns true if the response is valid (could be appended to the history), flase otherwise.\n */\nfunction isValidResponse(response) {\n    var _a;\n    if (response.candidates === undefined || response.candidates.length === 0) {\n        return false;\n    }\n    const content = (_a = response.candidates[0]) === null || _a === void 0 ? void 0 : _a.content;\n    if (content === undefined) {\n        return false;\n    }\n    if (content.parts === undefined || content.parts.length === 0) {\n        return false;\n    }\n    for (const part of content.parts) {\n        if (part === undefined || Object.keys(part).length === 0) {\n            return false;\n        }\n        if (part.text !== undefined && part.text === \"\") {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = \"SILENT_ERROR\";\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nclass ChatSession {\n    constructor(apiKey, model, params, _requestOptions = {}) {\n        this.model = model;\n        this.params = params;\n        this._requestOptions = _requestOptions;\n        this._history = [];\n        this._sendPromise = Promise.resolve();\n        this._apiKey = apiKey;\n        if (params === null || params === void 0 ? void 0 : params.history) {\n            validateChatHistory(params.history);\n            this._history = params.history;\n        }\n    }\n    /**\n     * Gets the chat history so far. Blocked prompts are not added to history.\n     * Blocked candidates are not added to history, nor are the prompts that\n     * generated them.\n     */\n    async getHistory() {\n        await this._sendPromise;\n        return this._history;\n    }\n    /**\n     * Sends a chat message and receives a non-streaming\n     * {@link GenerateContentResult}.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async sendMessage(request, requestOptions = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            cachedContent: (_f = this.params) === null || _f === void 0 ? void 0 : _f.cachedContent,\n            contents: [...this._history, newContent],\n        };\n        const chatSessionRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        let finalResult;\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => generateContent(this._apiKey, this.model, generateContentRequest, chatSessionRequestOptions))\n            .then((result) => {\n            var _a;\n            if (isValidResponse(result.response)) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({ parts: [], \n                    // Response seems to come back without a role set.\n                    role: \"model\" }, (_a = result.response.candidates) === null || _a === void 0 ? void 0 : _a[0].content);\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(result.response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n            finalResult = result;\n        })\n            .catch((e) => {\n            // Resets _sendPromise to avoid subsequent calls failing and throw error.\n            this._sendPromise = Promise.resolve();\n            throw e;\n        });\n        await this._sendPromise;\n        return finalResult;\n    }\n    /**\n     * Sends a chat message and receives the response as a\n     * {@link GenerateContentStreamResult} containing an iterable stream\n     * and a response promise.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async sendMessageStream(request, requestOptions = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            cachedContent: (_f = this.params) === null || _f === void 0 ? void 0 : _f.cachedContent,\n            contents: [...this._history, newContent],\n        };\n        const chatSessionRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        const streamPromise = generateContentStream(this._apiKey, this.model, generateContentRequest, chatSessionRequestOptions);\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => streamPromise)\n            // This must be handled to avoid unhandled rejection, but jump\n            // to the final catch block with a label to not log this error.\n            .catch((_ignored) => {\n            throw new Error(SILENT_ERROR);\n        })\n            .then((streamResult) => streamResult.response)\n            .then((response) => {\n            if (isValidResponse(response)) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({}, response.candidates[0].content);\n                // Response seems to come back without a role set.\n                if (!responseContent.role) {\n                    responseContent.role = \"model\";\n                }\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n        })\n            .catch((e) => {\n            // Errors in streamPromise are already catchable by the user as\n            // streamPromise is returned.\n            // Avoid duplicating the error message in logs.\n            if (e.message !== SILENT_ERROR) {\n                // Users do not have access to _sendPromise to catch errors\n                // downstream from streamPromise, so they should not throw.\n                console.error(e);\n            }\n        });\n        return streamPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function countTokens(apiKey, model, params, singleRequestOptions) {\n    const response = await makeModelRequest(model, Task.COUNT_TOKENS, apiKey, false, JSON.stringify(params), singleRequestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function embedContent(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.EMBED_CONTENT, apiKey, false, JSON.stringify(params), requestOptions);\n    return response.json();\n}\nasync function batchEmbedContents(apiKey, model, params, requestOptions) {\n    const requestsWithModel = params.requests.map((request) => {\n        return Object.assign(Object.assign({}, request), { model });\n    });\n    const response = await makeModelRequest(model, Task.BATCH_EMBED_CONTENTS, apiKey, false, JSON.stringify({ requests: requestsWithModel }), requestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for generative model APIs.\n * @public\n */\nclass GenerativeModel {\n    constructor(apiKey, modelParams, _requestOptions = {}) {\n        this.apiKey = apiKey;\n        this._requestOptions = _requestOptions;\n        if (modelParams.model.includes(\"/\")) {\n            // Models may be named \"models/model-name\" or \"tunedModels/model-name\"\n            this.model = modelParams.model;\n        }\n        else {\n            // If path is not included, assume it's a non-tuned model.\n            this.model = `models/${modelParams.model}`;\n        }\n        this.generationConfig = modelParams.generationConfig || {};\n        this.safetySettings = modelParams.safetySettings || [];\n        this.tools = modelParams.tools;\n        this.toolConfig = modelParams.toolConfig;\n        this.systemInstruction = formatSystemInstruction(modelParams.systemInstruction);\n        this.cachedContent = modelParams.cachedContent;\n    }\n    /**\n     * Makes a single non-streaming call to the model\n     * and returns an object containing a single {@link GenerateContentResponse}.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async generateContent(request, requestOptions = {}) {\n        var _a;\n        const formattedParams = formatGenerateContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return generateContent(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, formattedParams), generativeModelRequestOptions);\n    }\n    /**\n     * Makes a single streaming call to the model and returns an object\n     * containing an iterable stream that iterates over all chunks in the\n     * streaming response as well as a promise that returns the final\n     * aggregated response.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async generateContentStream(request, requestOptions = {}) {\n        var _a;\n        const formattedParams = formatGenerateContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return generateContentStream(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, formattedParams), generativeModelRequestOptions);\n    }\n    /**\n     * Gets a new {@link ChatSession} instance which can be used for\n     * multi-turn chats.\n     */\n    startChat(startChatParams) {\n        var _a;\n        return new ChatSession(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, startChatParams), this._requestOptions);\n    }\n    /**\n     * Counts the tokens in the provided request.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async countTokens(request, requestOptions = {}) {\n        const formattedParams = formatCountTokensInput(request, {\n            model: this.model,\n            generationConfig: this.generationConfig,\n            safetySettings: this.safetySettings,\n            tools: this.tools,\n            toolConfig: this.toolConfig,\n            systemInstruction: this.systemInstruction,\n            cachedContent: this.cachedContent,\n        });\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return countTokens(this.apiKey, this.model, formattedParams, generativeModelRequestOptions);\n    }\n    /**\n     * Embeds the provided content.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async embedContent(request, requestOptions = {}) {\n        const formattedParams = formatEmbedContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return embedContent(this.apiKey, this.model, formattedParams, generativeModelRequestOptions);\n    }\n    /**\n     * Embeds an array of {@link EmbedContentRequest}s.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async batchEmbedContents(batchEmbedContentRequest, requestOptions = {}) {\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return batchEmbedContents(this.apiKey, this.model, batchEmbedContentRequest, generativeModelRequestOptions);\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Top-level class for this SDK\n * @public\n */\nclass GoogleGenerativeAI {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    /**\n     * Gets a {@link GenerativeModel} instance for the provided model name.\n     */\n    getGenerativeModel(modelParams, requestOptions) {\n        if (!modelParams.model) {\n            throw new GoogleGenerativeAIError(`Must provide a model name. ` +\n                `Example: genai.getGenerativeModel({ model: 'my-model-name' })`);\n        }\n        return new GenerativeModel(this.apiKey, modelParams, requestOptions);\n    }\n    /**\n     * Creates a {@link GenerativeModel} instance from provided content cache.\n     */\n    getGenerativeModelFromCachedContent(cachedContent, modelParams, requestOptions) {\n        if (!cachedContent.name) {\n            throw new GoogleGenerativeAIRequestInputError(\"Cached content must contain a `name` field.\");\n        }\n        if (!cachedContent.model) {\n            throw new GoogleGenerativeAIRequestInputError(\"Cached content must contain a `model` field.\");\n        }\n        /**\n         * Not checking tools and toolConfig for now as it would require a deep\n         * equality comparison and isn't likely to be a common case.\n         */\n        const disallowedDuplicates = [\"model\", \"systemInstruction\"];\n        for (const key of disallowedDuplicates) {\n            if ((modelParams === null || modelParams === void 0 ? void 0 : modelParams[key]) &&\n                cachedContent[key] &&\n                (modelParams === null || modelParams === void 0 ? void 0 : modelParams[key]) !== cachedContent[key]) {\n                if (key === \"model\") {\n                    const modelParamsComp = modelParams.model.startsWith(\"models/\")\n                        ? modelParams.model.replace(\"models/\", \"\")\n                        : modelParams.model;\n                    const cachedContentComp = cachedContent.model.startsWith(\"models/\")\n                        ? cachedContent.model.replace(\"models/\", \"\")\n                        : cachedContent.model;\n                    if (modelParamsComp === cachedContentComp) {\n                        continue;\n                    }\n                }\n                throw new GoogleGenerativeAIRequestInputError(`Different value for \"${key}\" specified in modelParams` +\n                    ` (${modelParams[key]}) and cachedContent (${cachedContent[key]})`);\n            }\n        }\n        const modelParamsFromCache = Object.assign(Object.assign({}, modelParams), { model: cachedContent.model, tools: cachedContent.tools, toolConfig: cachedContent.toolConfig, systemInstruction: cachedContent.systemInstruction, cachedContent });\n        return new GenerativeModel(this.apiKey, modelParamsFromCache, requestOptions);\n    }\n}\n\nexport { BlockReason, ChatSession, DynamicRetrievalMode, ExecutableCodeLanguage, FinishReason, FunctionCallingMode, GenerativeModel, GoogleGenerativeAI, GoogleGenerativeAIAbortError, GoogleGenerativeAIError, GoogleGenerativeAIFetchError, GoogleGenerativeAIRequestInputError, GoogleGenerativeAIResponseError, HarmBlockThreshold, HarmCategory, HarmProbability, Outcome, POSSIBLE_ROLES, SchemaType, TaskType };\n//# sourceMappingURL=index.mjs.map\n","// Import Gemini API\r\nimport { GoogleGenerativeAI } from '@google/generative-ai';\r\n\r\n// AIService - Advanced Gemini AI integration with enhanced Excel data understanding\r\nclass AIService {\r\n    constructor() {\r\n        this.CONFIG = {\r\n            // Get API key from environment variable\r\n            GEMINI_API_KEY: process.env.GEMINI_API_KEY,\r\n            GEMINI_MODEL: 'gemini-2.5-flash',\r\n            MAX_HISTORY: 12, // Increased for better context\r\n            MAX_CONTEXT_TOKENS: 32000 // Conservative limit for prompt size\r\n        };\r\n        \r\n        this.genAI = null;\r\n        this.model = null;\r\n        this.conversationHistory = [];\r\n        this.chatSession = null;\r\n    }\r\n\r\n    // Initialize Gemini AI with chat session\r\n    initializeGemini() {\r\n        try {\r\n            if (!this.CONFIG.GEMINI_API_KEY || this.CONFIG.GEMINI_API_KEY === 'YOUR_GEMINI_API_KEY_HERE') {\r\n                throw new Error('Please configure your Gemini API key in the .env file');\r\n            }\r\n            \r\n            this.genAI = new GoogleGenerativeAI(this.CONFIG.GEMINI_API_KEY);\r\n            this.model = this.genAI.getGenerativeModel({ model: this.CONFIG.GEMINI_MODEL });\r\n            \r\n            this.conversationHistory = [];\r\n            this.chatSession = null;\r\n            \r\n            console.log('Gemini AI initialized with model:', this.CONFIG.GEMINI_MODEL);\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Error initializing Gemini AI:', error);\r\n            throw new Error('Failed to initialize AI service. Please check your API key.');\r\n        }\r\n    }\r\n\r\n    // Ask Gemini with comprehensive enhanced context\r\n    async askGeminiWithContext(userQuestion, currentWorksheetData) {\r\n        if (!this.model) {\r\n            throw new Error('Gemini AI not initialized');\r\n        }\r\n        \r\n        if (!currentWorksheetData) {\r\n            throw new Error('No Excel data available');\r\n        }\r\n        \r\n        try {\r\n            if (!this.chatSession) {\r\n                const systemPrompt = this.createAdvancedSystemPrompt();\r\n                this.chatSession = this.model.startChat({\r\n                    history: [],\r\n                    generationConfig: {\r\n                        maxOutputTokens: 3072, // Increased for more detailed responses\r\n                        temperature: 0.7,\r\n                        topP: 0.8,\r\n                        topK: 40\r\n                    }\r\n                });\r\n                \r\n                await this.chatSession.sendMessage(systemPrompt);\r\n            }\r\n            \r\n            const contextualPrompt = this.createAdvancedContextualPrompt(userQuestion, currentWorksheetData);\r\n            \r\n            // Check prompt size to avoid token limit issues\r\n            if (contextualPrompt.length > this.CONFIG.MAX_CONTEXT_TOKENS * 3) {\r\n                console.log('Large prompt detected, applying compression...');\r\n                const compressedPrompt = this.compressPrompt(contextualPrompt, currentWorksheetData);\r\n                const result = await this.chatSession.sendMessage(compressedPrompt);\r\n                const response = await result.response;\r\n                return response.text().trim();\r\n            }\r\n            \r\n            const result = await this.chatSession.sendMessage(contextualPrompt);\r\n            const response = await result.response;\r\n            const text = response.text();\r\n            \r\n            if (!text || text.trim().length === 0) {\r\n                throw new Error('Empty response from AI');\r\n            }\r\n            \r\n            return text.trim();\r\n            \r\n        } catch (error) {\r\n            console.error('Gemini API error:', error);\r\n            \r\n            if (error.message.includes('chat') || error.message.includes('session')) {\r\n                this.chatSession = null;\r\n                throw new Error('Chat session reset. Please try your question again.');\r\n            }\r\n            \r\n            if (error.message.includes('API key')) {\r\n                throw new Error('Invalid API key. Please check your Gemini API configuration.');\r\n            } else if (error.message.includes('quota') || error.message.includes('limit')) {\r\n                throw new Error('API quota exceeded. Please try again later.');\r\n            } else {\r\n                throw new Error('AI service error: ' + error.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Advanced system prompt with comprehensive Excel understanding\r\n    createAdvancedSystemPrompt() {\r\n        return `You are an elite Excel Financial Data Assistant with advanced capabilities for analyzing complex workbooks and financial models.\r\n\r\nENHANCED CAPABILITIES:\r\n1. **Advanced Data Structure Understanding**\r\n   - Analyze complex financial models with multiple sheets\r\n   - Understand formulas, calculated fields, and data relationships\r\n   - Recognize Excel Tables, PivotTables, Charts, and Named Ranges\r\n   - Handle very large datasets with intelligent sampling\r\n\r\n2. **Financial Expertise**\r\n   - Deep understanding of financial statements (P&L, Balance Sheet, Cash Flow)\r\n   - Recognition of financial metrics, ratios, and KPIs\r\n   - Quarterly/annual data analysis and trending\r\n   - Revenue recognition, expense categorization, and profitability analysis\r\n\r\n3. **Data Type Intelligence**\r\n   - Distinguish between raw data and calculated formulas\r\n   - Understand number formatting (currency, percentages, dates)\r\n   - Recognize data types and their business significance\r\n   - Handle mixed data types in complex financial models\r\n\r\n4. **Scale & Performance**\r\n   - Work with enterprise-scale financial models (100+ columns, 500+ rows)\r\n   - Understand sampling strategies for very large datasets\r\n   - Provide insights even with incomplete data views\r\n   - Maintain accuracy across multiple worksheet analysis\r\n\r\nANALYSIS APPROACH:\r\n- **Structure First**: Always understand the overall data structure before diving into specifics\r\n- **Context Aware**: Use conversation history and business context for better insights\r\n- **Precision**: Provide exact values from identified rows/columns with proper attribution\r\n- **Intelligent Sampling**: When working with sampled data, extrapolate insights appropriately\r\n- **Cross-Sheet Relationships**: Understand how different worksheets relate to each other\r\n\r\nRESPONSE GUIDELINES:\r\n- **Be CONCISE by default** - Provide brief, direct answers unless user asks for elaboration\r\n- Always specify the exact source of data (row labels, column headers)\r\n- When data is sampled, indicate this and provide appropriate caveats\r\n- Use clear formatting (tables, bullet points) for complex analysis\r\n- Provide actionable insights, not just data regurgitation\r\n- Ask clarifying questions when user intent is ambiguous\r\n- Keep responses short and focused - only expand when explicitly requested\r\n\r\nRespond with \"Advanced Excel Analysis System Ready!\" to confirm initialization.`;\r\n    }\r\n\r\n    // Create comprehensive contextual prompt with all enhanced data features\r\n    createAdvancedContextualPrompt(userQuestion, currentWorksheetData) {\r\n        const data = currentWorksheetData;\r\n        \r\n        let prompt = `ADVANCED EXCEL DATA ANALYSIS REQUEST:\r\n\r\nWORKSHEET OVERVIEW:\r\n- Name: \"${data.worksheetName}\"\r\n- Range: ${data.address} (${data.totalRows} rows × ${data.totalCols} columns)\r\n- Data Source: ${data.isSelection ? 'Selected Range' : 'Full Worksheet'}`;\r\n\r\n        // Add sampling information if applicable\r\n        if (data.isSampled) {\r\n            prompt += `\r\n- IMPORTANT: This is SAMPLED data for performance (intelligent sampling applied)\r\n- Original data may be much larger - extrapolate insights accordingly`;\r\n        }\r\n\r\n        prompt += '\\n\\n';\r\n\r\n        // Enhanced metadata section\r\n        if (data.dataMetadata) {\r\n            const meta = data.dataMetadata;\r\n            if (meta.tables?.length > 0 || meta.pivotTables?.length > 0 || meta.charts?.length > 0) {\r\n                prompt += `EXCEL OBJECTS DETECTED:`;\r\n                if (meta.tables?.length > 0) {\r\n                    prompt += `\\n- Excel Tables: ${meta.tables.map(t => t.name).join(', ')}`;\r\n                }\r\n                if (meta.pivotTables?.length > 0) {\r\n                    prompt += `\\n- Pivot Tables: ${meta.pivotTables.map(p => p.name).join(', ')}`;\r\n                }\r\n                if (meta.charts?.length > 0) {\r\n                    prompt += `\\n- Charts: ${meta.charts.map(c => c.name).join(', ')}`;\r\n                }\r\n                if (meta.hasNamedRanges) {\r\n                    prompt += `\\n- Named Ranges: Present`;\r\n                }\r\n                prompt += '\\n\\n';\r\n            }\r\n        }\r\n\r\n        // Multi-sheet information\r\n        if (data.workbookData) {\r\n            const wb = data.workbookData;\r\n            prompt += `WORKBOOK STRUCTURE:\r\n- Total Sheets: ${wb.totalSheets}\r\n- Total Data Cells: ${wb.totalDataCells.toLocaleString()}\r\n- Other Sheets: ${wb.sheets.filter(s => s.name !== data.worksheetName).map(s => `${s.name} (${s.totalCells} cells)`).join(', ')}\r\n\r\n`;\r\n        }\r\n\r\n        // Enhanced structured data analysis\r\n        if (data.structuredData) {\r\n            const struct = data.structuredData;\r\n            \r\n            prompt += `TABLE STRUCTURE ANALYSIS:\r\n- Data Type: ${struct.type}\r\n- Column Headers: ${struct.columnHeaders?.filter(h => h && h !== '').join(' | ') || 'Not detected'}\r\n- Data Rows: ${struct.dataRows?.length || 0}\r\n- Key Financial Rows: ${struct.keyRows?.length || 0}\r\n- Total/Summary Rows: ${struct.totalRows?.length || 0}\r\n\r\n`;\r\n\r\n            // Formula and format analysis\r\n            if (struct.formulaAnalysis) {\r\n                const formulas = struct.formulaAnalysis;\r\n                if (formulas.hasFormulas) {\r\n                    prompt += `FORMULA ANALYSIS:\r\n- Total Formulas: ${formulas.formulaCount}\r\n- Formula Types: ${formulas.types.join(', ')}\r\n\r\n`;\r\n                }\r\n            }\r\n\r\n            if (struct.formatAnalysis?.hasFormatting) {\r\n                const formats = struct.formatAnalysis;\r\n                prompt += `NUMBER FORMATTING:\r\n- Custom Formats: ${formats.types.slice(0, 5).join(', ')}${formats.types.length > 5 ? '...' : ''}\r\n\r\n`;\r\n            }\r\n\r\n            // Data type distribution\r\n            if (struct.dataTypes) {\r\n                const types = struct.dataTypes;\r\n                const totalCells = Object.values(types).reduce((sum, count) => sum + count, 0);\r\n                if (totalCells > 0) {\r\n                    prompt += `DATA TYPE DISTRIBUTION:`;\r\n                    Object.entries(types).forEach(([type, count]) => {\r\n                        if (count > 0) {\r\n                            const percentage = ((count / totalCells) * 100).toFixed(1);\r\n                            prompt += `\\n- ${type}: ${count} cells (${percentage}%)`;\r\n                        }\r\n                    });\r\n                    prompt += '\\n\\n';\r\n                }\r\n            }\r\n\r\n            // Quarterly data with enhanced context\r\n            if (struct.quarterlyData?.length > 0) {\r\n                prompt += `QUARTERLY/TIME-SERIES DATA:\\n`;\r\n                struct.quarterlyData.slice(0, 8).forEach(qData => {\r\n                    if (qData.quarters.length > 0) {\r\n                        prompt += `${qData.label}${qData.isTotal ? ' [TOTAL]' : ''}: `;\r\n                        const quarterValues = qData.quarters.map(q => `${q.quarter}=${this.formatValue(q.value)}`).join(', ');\r\n                        prompt += quarterValues + '\\n';\r\n                    }\r\n                });\r\n                if (struct.quarterlyData.length > 8) {\r\n                    prompt += `... and ${struct.quarterlyData.length - 8} more quarterly series\\n`;\r\n                }\r\n                prompt += '\\n';\r\n            }\r\n            \r\n            // Key financial rows with enhanced formatting\r\n            if (struct.keyRows?.length > 0) {\r\n                prompt += `KEY FINANCIAL METRICS:\\n`;\r\n                struct.keyRows.slice(0, 10).forEach(row => {\r\n                    prompt += `\"${row.label}\"${row.isTotal ? ' [TOTAL]' : ''}${row.hasFormulas ? ' [CALCULATED]' : ''}: `;\r\n                    const nonEmptyValues = row.values.filter(v => v !== null && v !== undefined && v !== '');\r\n                    prompt += nonEmptyValues.slice(0, 8).map(v => this.formatValue(v)).join(', ');\r\n                    if (nonEmptyValues.length > 8) prompt += `, ... (${nonEmptyValues.length - 8} more)`;\r\n                    prompt += '\\n';\r\n                });\r\n                if (struct.keyRows.length > 10) {\r\n                    prompt += `... and ${struct.keyRows.length - 10} more key rows\\n`;\r\n                }\r\n                prompt += '\\n';\r\n            }\r\n            \r\n            // Sample of other data rows\r\n            if (struct.dataRows && struct.dataRows.length > (struct.keyRows?.length || 0)) {\r\n                const otherRows = struct.dataRows.filter(row => \r\n                    !(struct.keyRows || []).find(keyRow => keyRow.label === row.label)\r\n                ).slice(0, 6);\r\n                \r\n                if (otherRows.length > 0) {\r\n                    prompt += `OTHER DATA ROWS (sample):\\n`;\r\n                    otherRows.forEach(row => {\r\n                        prompt += `\"${row.label}\"${row.hasFormulas ? ' [CALCULATED]' : ''}: `;\r\n                        const nonEmptyValues = row.values.filter(v => v !== null && v !== undefined && v !== '');\r\n                        prompt += nonEmptyValues.slice(0, 4).map(v => this.formatValue(v)).join(', ');\r\n                        if (nonEmptyValues.length > 4) prompt += `, ... (${nonEmptyValues.length - 4} more)`;\r\n                        prompt += '\\n';\r\n                    });\r\n                    prompt += '\\n';\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Add conversation context with enhanced formatting\r\n        if (this.conversationHistory.length > 2) {\r\n            prompt += `CONVERSATION HISTORY:\\n`;\r\n            const recentHistory = this.conversationHistory.slice(-6);\r\n            recentHistory.forEach((msg, index) => {\r\n                if (msg.role === 'user') {\r\n                    prompt += `[${index + 1}] User: \"${msg.content}\"\\n`;\r\n                } else {\r\n                    const truncated = msg.content.length > 120 ? msg.content.substring(0, 120) + '...' : msg.content;\r\n                    prompt += `[${index + 1}] Assistant: \"${truncated}\"\\n`;\r\n                }\r\n            });\r\n            prompt += '\\n';\r\n        }\r\n        \r\n        prompt += `CURRENT USER QUESTION: \"${userQuestion}\"\r\n\r\nANALYSIS INSTRUCTIONS:\r\n1. **CONCISE RESPONSES**: Provide brief, focused answers - only elaborate when user asks for more detail\r\n2. **Data Source Precision**: Always specify exact row labels and column headers when referencing data\r\n3. **Context Utilization**: Use conversation history and business context for deeper insights\r\n4. **Sampling Awareness**: ${data.isSampled ? 'Remember this is sampled data - provide appropriate caveats' : 'You have access to the complete dataset'}\r\n5. **Formula Recognition**: Distinguish between raw input data and calculated/formula-based values\r\n6. **Financial Intelligence**: Apply financial analysis best practices and recognize common financial patterns\r\n7. **Multi-dimensional Analysis**: Consider time trends, cross-sectional comparisons, and ratio analysis\r\n8. **Actionable Insights**: Provide business-relevant conclusions, not just data summaries\r\n\r\nPlease provide a CONCISE analysis addressing the user's question. Keep it brief unless they specifically ask for more detail.`;\r\n\r\n        return prompt;\r\n    }\r\n\r\n    // Compress prompt for very large datasets\r\n    compressPrompt(originalPrompt, currentWorksheetData) {\r\n        const data = currentWorksheetData;\r\n        \r\n        let compressedPrompt = `COMPRESSED EXCEL ANALYSIS (Large Dataset):\r\n\r\nWORKSHEET: \"${data.worksheetName}\" | Range: ${data.address} (${data.totalRows}×${data.totalCols})`;\r\n\r\n        if (data.isSampled) {\r\n            compressedPrompt += ` | SAMPLED DATA`;\r\n        }\r\n\r\n        // Only include essential structure information\r\n        if (data.structuredData) {\r\n            const struct = data.structuredData;\r\n            \r\n            compressedPrompt += `\r\n\r\nKEY STRUCTURE:\r\n- Headers: ${struct.columnHeaders?.slice(0, 10).join(' | ') || 'N/A'}\r\n- Key Rows: ${struct.keyRows?.length || 0} | Data Rows: ${struct.dataRows?.length || 0}`;\r\n\r\n            // Only show top financial metrics\r\n            if (struct.keyRows?.length > 0) {\r\n                compressedPrompt += `\r\n\r\nTOP METRICS:`;\r\n                struct.keyRows.slice(0, 5).forEach(row => {\r\n                    const values = row.values.filter(v => v !== null && v !== undefined && v !== '').slice(0, 4);\r\n                    compressedPrompt += `\\n${row.label}: ${values.map(v => this.formatValue(v)).join(', ')}`;\r\n                });\r\n            }\r\n\r\n            // Quarterly data summary\r\n            if (struct.quarterlyData?.length > 0) {\r\n                compressedPrompt += `\r\n\r\nQUARTERLY: ${struct.quarterlyData.length} series | Example: ${struct.quarterlyData[0].label}`;\r\n            }\r\n        }\r\n\r\n        // Essential conversation context\r\n        if (this.conversationHistory.length > 0) {\r\n            const lastExchange = this.conversationHistory.slice(-2);\r\n            compressedPrompt += `\r\n\r\nRECENT: ${lastExchange.map(msg => `${msg.role}: ${msg.content.substring(0, 50)}...`).join(' | ')}`;\r\n        }\r\n\r\n        compressedPrompt += `\r\n\r\nQUESTION: \"${userQuestion}\"\r\n\r\nNote: Provide focused analysis due to large dataset. Request specific details if needed.`;\r\n\r\n        return compressedPrompt;\r\n    }\r\n\r\n    // Format values for display\r\n    formatValue(value) {\r\n        if (value === null || value === undefined || value === '') return 'N/A';\r\n        if (typeof value === 'number') {\r\n            if (Math.abs(value) >= 1000000) {\r\n                return (value / 1000000).toFixed(1) + 'M';\r\n            } else if (Math.abs(value) >= 1000) {\r\n                return (value / 1000).toFixed(1) + 'K';\r\n            } else {\r\n                return value.toString();\r\n            }\r\n        }\r\n        return String(value).substring(0, 20);\r\n    }\r\n\r\n    // Conversation history management\r\n    addToConversationHistory(role, content) {\r\n        this.conversationHistory.push({\r\n            role: role,\r\n            content: content,\r\n            timestamp: new Date().toISOString()\r\n        });\r\n        \r\n        // Trim history if it gets too long\r\n        if (this.conversationHistory.length > this.CONFIG.MAX_HISTORY * 2) {\r\n            this.conversationHistory = this.conversationHistory.slice(-this.CONFIG.MAX_HISTORY * 2);\r\n        }\r\n    }\r\n\r\n    // Clear conversation and start fresh\r\n    clearConversation() {\r\n        this.conversationHistory = [];\r\n        this.chatSession = null;\r\n        console.log('AI conversation history cleared');\r\n    }\r\n\r\n    // Get conversation history length\r\n    getConversationLength() {\r\n        return Math.floor(this.conversationHistory.length / 2);\r\n    }\r\n\r\n    // Get conversation history\r\n    getConversationHistory() {\r\n        return this.conversationHistory;\r\n    }\r\n\r\n    // Check if AI is initialized\r\n    isInitialized() {\r\n        return this.model !== null;\r\n    }\r\n}\r\n\r\n// Export for use in other modules\r\nif (typeof window !== 'undefined') {\r\n    window.AIService = AIService;\r\n}","/**\n * marked v9.1.6 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nfunction unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            val = typeof val === 'object' && 'source' in val ? val.source : val;\n            val = val.replace(caret, '$1');\n            regex = regex.replace(name, val);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(regex, opt);\n        }\n    };\n    return obj;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch (e) {\n        return null;\n    }\n    return href;\n}\nconst noopTest = { exec: () => null };\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text)\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape(text)\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    // TODO: Fix this rules type\n    rules;\n    lexer;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0]\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^ {1,4}/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n                text\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: cap[0]\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            const text = rtrim(cap[0].replace(/^ *>[ \\t]?/gm, ''), '\\n');\n            const top = this.lexer.state.top;\n            this.lexer.state.top = true;\n            const tokens = this.lexer.blockTokens(text);\n            this.lexer.state.top = top;\n            return {\n                type: 'blockquote',\n                raw: cap[0],\n                tokens,\n                text\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: []\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let raw = '';\n            let itemContents = '';\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                let blankLine = false;\n                if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(src)) {\n                            break;\n                        }\n                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLine.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLine.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n *\\n *$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: []\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = raw.trimEnd();\n            list.items[list.items.length - 1].text = itemContents.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0]\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (cap) {\n            if (!/[:|]/.test(cap[2])) {\n                // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n                return;\n            }\n            const item = {\n                type: 'table',\n                raw: cap[0],\n                header: splitCells(cap[1]).map(c => {\n                    return { text: c, tokens: [] };\n                }),\n                align: cap[2].replace(/^\\||\\| *$/g, '').split('|'),\n                rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n            };\n            if (item.header.length === item.align.length) {\n                let l = item.align.length;\n                let i, j, k, row;\n                for (i = 0; i < l; i++) {\n                    const align = item.align[i];\n                    if (align) {\n                        if (/^ *-+: *$/.test(align)) {\n                            item.align[i] = 'right';\n                        }\n                        else if (/^ *:-+: *$/.test(align)) {\n                            item.align[i] = 'center';\n                        }\n                        else if (/^ *:-+ *$/.test(align)) {\n                            item.align[i] = 'left';\n                        }\n                        else {\n                            item.align[i] = null;\n                        }\n                    }\n                }\n                l = item.rows.length;\n                for (i = 0; i < l; i++) {\n                    item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => {\n                        return { text: c, tokens: [] };\n                    });\n                }\n                // parse child tokens inside headers and cells\n                // header child tokens\n                l = item.header.length;\n                for (j = 0; j < l; j++) {\n                    item.header[j].tokens = this.lexer.inline(item.header[j].text);\n                }\n                // cell child tokens\n                l = item.rows.length;\n                for (j = 0; j < l; j++) {\n                    row = item.rows[j];\n                    for (k = 0; k < row.length; k++) {\n                        row[k].tokens = this.lexer.inline(row[k].text);\n                    }\n                }\n                return item;\n            }\n        }\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1])\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0])\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape(cap[1])\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0]\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n                title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            link = links[link.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrong.lDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text)\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0]\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2])\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n                } while (prevCapZero !== cap[0]);\n                text = escape(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n}\n\n/**\n * Block-Level Grammar\n */\n// Not all rules are defined in the object literal\n// @ts-expect-error\nconst block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n        + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n        + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n        + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n        + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n        + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n        + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n        + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n        + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n        + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^(?!bull )((?:.|\\n(?!\\s*?\\n|bull ))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n};\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n    .replace('label', block._label)\n    .replace('title', block._title)\n    .getRegex();\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n    .replace('bull', block.bullet)\n    .getRegex();\nblock.list = edit(block.list)\n    .replace(/bull/g, block.bullet)\n    .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n    .replace('def', '\\\\n+(?=' + block.def.source + ')')\n    .getRegex();\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n    + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n    .replace('comment', block._comment)\n    .replace('tag', block._tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nblock.lheading = edit(block.lheading)\n    .replace(/bull/g, block.bullet) // lists can interrupt\n    .getRegex();\nblock.paragraph = edit(block._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nblock.blockquote = edit(block.blockquote)\n    .replace('paragraph', block.paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nblock.normal = { ...block };\n/**\n * GFM Block Grammar\n */\nblock.gfm = {\n    ...block.normal,\n    table: '^ *([^\\\\n ].*)\\\\n' // Header\n        + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n        + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\nblock.gfm.table = edit(block.gfm.table)\n    .replace('hr', block.hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', ' {4}[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nblock.gfm.paragraph = edit(block._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('table', block.gfm.table) // interrupt paragraphs with table\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nblock.pedantic = {\n    ...block.normal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', block._comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(block.normal._paragraph)\n        .replace('hr', block.hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', block.lheading)\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .getRegex()\n};\n/**\n * Inline-Level Grammar\n */\n// Not all rules are defined in the object literal\n// @ts-expect-error\nconst inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment'\n        + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n        + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n        + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n        + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n        + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n        lDelim: /^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/,\n        //         (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n        //         | Skip orphan inside strong      | Consume to delim | (1) #***              | (2) a***#, a***                    | (3) #***a, ***a                  | (4) ***#                 | (5) #***#                         | (6) a***a\n        rDelimAst: /^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)[punct](\\*+)(?=[\\s]|$)|[^punct\\s](\\*+)(?!\\*)(?=[punct\\s]|$)|(?!\\*)[punct\\s](\\*+)(?=[^punct\\s])|[\\s](\\*+)(?!\\*)(?=[punct])|(?!\\*)[punct](\\*+)(?!\\*)(?=[punct])|[^punct\\s](\\*+)(?=[^punct\\s])/,\n        rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)[punct](_+)(?=[\\s]|$)|[^punct\\s](_+)(?!_)(?=[punct\\s]|$)|(?!_)[punct\\s](_+)(?=[^punct\\s])|[\\s](_+)(?!_)(?=[punct])|(?!_)[punct](_+)(?!_)(?=[punct])/ // ^- Not allowed for _\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^((?![*_])[\\spunctuation])/\n};\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\ninline._punctuation = '\\\\p{P}$+<=>`^|~';\ninline.punctuation = edit(inline.punctuation, 'u').replace(/punctuation/g, inline._punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\ninline.anyPunctuation = /\\\\[punct]/g;\ninline._escapes = /\\\\([punct])/g;\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim, 'u')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline.anyPunctuation = edit(inline.anyPunctuation, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline._escapes = edit(inline._escapes, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n    .replace('scheme', inline._scheme)\n    .replace('email', inline._email)\n    .getRegex();\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\ninline.tag = edit(inline.tag)\n    .replace('comment', inline._comment)\n    .replace('attribute', inline._attribute)\n    .getRegex();\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\ninline.link = edit(inline.link)\n    .replace('label', inline._label)\n    .replace('href', inline._href)\n    .replace('title', inline._title)\n    .getRegex();\ninline.reflink = edit(inline.reflink)\n    .replace('label', inline._label)\n    .replace('ref', block._label)\n    .getRegex();\ninline.nolink = edit(inline.nolink)\n    .replace('ref', block._label)\n    .getRegex();\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n    .replace('reflink', inline.reflink)\n    .replace('nolink', inline.nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\ninline.normal = { ...inline };\n/**\n * Pedantic Inline Grammar\n */\ninline.pedantic = {\n    ...inline.normal,\n    strong: {\n        start: /^__|\\*\\*/,\n        middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n        endAst: /\\*\\*(?!\\*)/g,\n        endUnd: /__(?!_)/g\n    },\n    em: {\n        start: /^_|\\*/,\n        middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n        endAst: /\\*(?!\\*)/g,\n        endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', inline._label)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', inline._label)\n        .getRegex()\n};\n/**\n * GFM Inline Grammar\n */\ninline.gfm = {\n    ...inline.normal,\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\ninline.gfm.url = edit(inline.gfm.url, 'i')\n    .replace('email', inline.gfm._extended_email)\n    .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\ninline.breaks = {\n    ...inline.gfm,\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex()\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        // @ts-expect-error\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        let next;\n        while (next = this.inlineQueue.shift()) {\n            this.inlineTokens(next.src, next.tokens);\n        }\n        return this.tokens;\n    }\n    blockTokens(src, tokens = []) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        else {\n            src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                return leading + '    '.repeat(tabs.length);\n            });\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        let lastParagraphClipped;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    code(code, infostring, escaped) {\n        const lang = (infostring || '').match(/^\\S*/)?.[0];\n        code = code.replace(/\\n$/, '') + '\\n';\n        if (!lang) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(lang)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote(quote) {\n        return `<blockquote>\\n${quote}</blockquote>\\n`;\n    }\n    html(html, block) {\n        return html;\n    }\n    heading(text, level, raw) {\n        // ignore IDs\n        return `<h${level}>${text}</h${level}>\\n`;\n    }\n    hr() {\n        return '<hr>\\n';\n    }\n    list(body, ordered, start) {\n        const type = ordered ? 'ol' : 'ul';\n        const startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(text, task, checked) {\n        return `<li>${text}</li>\\n`;\n    }\n    checkbox(checked) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph(text) {\n        return `<p>${text}</p>\\n`;\n    }\n    table(header, body) {\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow(content) {\n        return `<tr>\\n${content}</tr>\\n`;\n    }\n    tablecell(content, flags) {\n        const type = flags.header ? 'th' : 'td';\n        const tag = flags.align\n            ? `<${type} align=\"${flags.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong(text) {\n        return `<strong>${text}</strong>`;\n    }\n    em(text) {\n        return `<em>${text}</em>`;\n    }\n    codespan(text) {\n        return `<code>${text}</code>`;\n    }\n    br() {\n        return '<br>';\n    }\n    del(text) {\n        return `<del>${text}</del>`;\n    }\n    link(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(text) {\n        return text;\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong(text) {\n        return text;\n    }\n    em(text) {\n        return text;\n    }\n    codespan(text) {\n        return text;\n    }\n    del(text) {\n        return text;\n    }\n    html(text) {\n        return text;\n    }\n    text(text) {\n        return text;\n    }\n    link(href, title, text) {\n        return '' + text;\n    }\n    image(href, title, text) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const genericToken = token;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'space': {\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr();\n                    continue;\n                }\n                case 'heading': {\n                    const headingToken = token;\n                    out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, unescape(this.parseInline(headingToken.tokens, this.textRenderer)));\n                    continue;\n                }\n                case 'code': {\n                    const codeToken = token;\n                    out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);\n                    continue;\n                }\n                case 'table': {\n                    const tableToken = token;\n                    let header = '';\n                    // header\n                    let cell = '';\n                    for (let j = 0; j < tableToken.header.length; j++) {\n                        cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), { header: true, align: tableToken.align[j] });\n                    }\n                    header += this.renderer.tablerow(cell);\n                    let body = '';\n                    for (let j = 0; j < tableToken.rows.length; j++) {\n                        const row = tableToken.rows[j];\n                        cell = '';\n                        for (let k = 0; k < row.length; k++) {\n                            cell += this.renderer.tablecell(this.parseInline(row[k].tokens), { header: false, align: tableToken.align[k] });\n                        }\n                        body += this.renderer.tablerow(cell);\n                    }\n                    out += this.renderer.table(header, body);\n                    continue;\n                }\n                case 'blockquote': {\n                    const blockquoteToken = token;\n                    const body = this.parse(blockquoteToken.tokens);\n                    out += this.renderer.blockquote(body);\n                    continue;\n                }\n                case 'list': {\n                    const listToken = token;\n                    const ordered = listToken.ordered;\n                    const start = listToken.start;\n                    const loose = listToken.loose;\n                    let body = '';\n                    for (let j = 0; j < listToken.items.length; j++) {\n                        const item = listToken.items[j];\n                        const checked = item.checked;\n                        const task = item.task;\n                        let itemBody = '';\n                        if (item.task) {\n                            const checkbox = this.renderer.checkbox(!!checked);\n                            if (loose) {\n                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                    }\n                                }\n                                else {\n                                    item.tokens.unshift({\n                                        type: 'text',\n                                        text: checkbox + ' '\n                                    });\n                                }\n                            }\n                            else {\n                                itemBody += checkbox + ' ';\n                            }\n                        }\n                        itemBody += this.parse(item.tokens, loose);\n                        body += this.renderer.listitem(itemBody, task, !!checked);\n                    }\n                    out += this.renderer.list(body, ordered, start);\n                    continue;\n                }\n                case 'html': {\n                    const htmlToken = token;\n                    out += this.renderer.html(htmlToken.text, htmlToken.block);\n                    continue;\n                }\n                case 'paragraph': {\n                    const paragraphToken = token;\n                    out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);\n                    }\n                    out += top ? this.renderer.paragraph(body) : body;\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'escape': {\n                    const escapeToken = token;\n                    out += renderer.text(escapeToken.text);\n                    break;\n                }\n                case 'html': {\n                    const tagToken = token;\n                    out += renderer.html(tagToken.text);\n                    break;\n                }\n                case 'link': {\n                    const linkToken = token;\n                    out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));\n                    break;\n                }\n                case 'image': {\n                    const imageToken = token;\n                    out += renderer.image(imageToken.href, imageToken.title, imageToken.text);\n                    break;\n                }\n                case 'strong': {\n                    const strongToken = token;\n                    out += renderer.strong(this.parseInline(strongToken.tokens, renderer));\n                    break;\n                }\n                case 'em': {\n                    const emToken = token;\n                    out += renderer.em(this.parseInline(emToken.tokens, renderer));\n                    break;\n                }\n                case 'codespan': {\n                    const codespanToken = token;\n                    out += renderer.codespan(codespanToken.text);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br();\n                    break;\n                }\n                case 'del': {\n                    const delToken = token;\n                    out += renderer.del(this.parseInline(delToken.tokens, renderer));\n                    break;\n                }\n                case 'text': {\n                    const textToken = token;\n                    out += renderer.text(textToken.text);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess'\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            values = values.concat(this.walkTokens(genericToken[childTokens], callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    const rendererFunc = pack.renderer[prop];\n                    const rendererKey = prop;\n                    const prevRenderer = renderer[rendererKey];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererKey] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    const tokenizerFunc = pack.tokenizer[prop];\n                    const tokenizerKey = prop;\n                    const prevTokenizer = tokenizer[tokenizerKey];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    tokenizer[tokenizerKey] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    const hooksFunc = pack.hooks[prop];\n                    const hooksKey = prop;\n                    const prevHook = hooks[hooksKey];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        hooks[hooksKey] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        hooks[hooksKey] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    #parseMarkdown(lexer, parser) {\n        return (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            // Show warning if an extension set async to true but the parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                if (!opt.silent) {\n                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                }\n                opt.async = true;\n            }\n            const throwError = this.#onError(!!opt.silent, !!opt.async);\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n            }\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                const tokens = lexer(src, opt);\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    #onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","// Import Markdown parser\r\nimport { marked } from 'marked';\r\n\r\n// UIService - Handles all user interface interactions and DOM manipulation\r\nclass UIService {\r\n    constructor() {\r\n        this.setupMarkdown();\r\n        this.onSendMessageCallback = null;\r\n        this.onClearConversationCallback = null;\r\n        this.onDataSourceToggleCallback = null;\r\n    }\r\n\r\n    // Set up markdown options\r\n    setupMarkdown() {\r\n        marked.setOptions({\r\n            breaks: true,\r\n            gfm: true,\r\n            sanitize: false\r\n        });\r\n    }\r\n\r\n    // Set up event listeners\r\n    setupEventListeners() {\r\n        const userInput = document.getElementById('user-input');\r\n        const sendBtn = document.getElementById('send-btn');\r\n        \r\n        if (sendBtn && this.onSendMessageCallback) {\r\n            sendBtn.addEventListener('click', this.onSendMessageCallback);\r\n        }\r\n        \r\n        if (userInput && this.onSendMessageCallback) {\r\n            userInput.addEventListener('keypress', (e) => {\r\n                if (e.key === 'Enter' && !e.shiftKey) {\r\n                    e.preventDefault();\r\n                    this.onSendMessageCallback();\r\n                }\r\n            });\r\n            \r\n            userInput.focus();\r\n        }\r\n        \r\n        this.addClearConversationButton();\r\n        this.setupDataSourceToggle();\r\n    }\r\n\r\n    // Set callback functions\r\n    setOnSendMessageCallback(callback) {\r\n        this.onSendMessageCallback = callback;\r\n    }\r\n\r\n    setOnClearConversationCallback(callback) {\r\n        this.onClearConversationCallback = callback;\r\n    }\r\n\r\n    setOnDataSourceToggleCallback(callback) {\r\n        this.onDataSourceToggleCallback = callback;\r\n    }\r\n\r\n    // Add clear conversation button\r\n    addClearConversationButton() {\r\n        const inputContainer = document.querySelector('.chat-input-container');\r\n        if (!inputContainer) return;\r\n        \r\n        const clearBtn = document.createElement('button');\r\n        clearBtn.innerHTML = 'New Conversation';\r\n        clearBtn.className = 'clear-btn';\r\n        clearBtn.style.cssText = `\r\n            width: 100%;\r\n            padding: 8px;\r\n            margin-top: 8px;\r\n            background: #404040;\r\n            color: #ffffff;\r\n            border: 1px solid #606060;\r\n            border-radius: 4px;\r\n            cursor: pointer;\r\n            font-size: 12px;\r\n            transition: background-color 0.2s;\r\n        `;\r\n        \r\n        clearBtn.addEventListener('mouseover', () => {\r\n            clearBtn.style.backgroundColor = '#ff6b35';\r\n        });\r\n        \r\n        clearBtn.addEventListener('mouseout', () => {\r\n            clearBtn.style.backgroundColor = '#404040';\r\n        });\r\n        \r\n        if (this.onClearConversationCallback) {\r\n            clearBtn.addEventListener('click', this.onClearConversationCallback);\r\n        }\r\n        \r\n        inputContainer.appendChild(clearBtn);\r\n    }\r\n\r\n    // Setup data source toggle functionality\r\n    setupDataSourceToggle() {\r\n        const useSelectionCheckbox = document.getElementById('use-selection');\r\n        if (useSelectionCheckbox && this.onDataSourceToggleCallback) {\r\n            useSelectionCheckbox.addEventListener('change', this.onDataSourceToggleCallback);\r\n        }\r\n    }\r\n\r\n    // Show clean welcome message\r\n    showWelcomeMessage() {\r\n        const chatMessages = document.getElementById('chat-messages');\r\n        if (!chatMessages) return;\r\n        \r\n        const welcomeHtml = `\r\n            <div class=\"welcome-message\">\r\n                <h3>Excel Data Assistant</h3>\r\n                <p>Ask questions about your Excel data and get intelligent analysis.</p>\r\n                \r\n                <div style=\"text-align: left; max-width: 300px; margin: 20px auto;\">\r\n                    <h4 style=\"color: #ff8c42; font-size: 14px; margin: 15px 0 10px 0; font-weight: 600;\">Example Questions:</h4>\r\n                    <ul style=\"font-size: 13px; line-height: 1.6; margin: 0; padding-left: 18px; color: #ccc;\">\r\n                        <li>\"What's the total revenue for Q4?\"</li>\r\n                        <li>\"Show me the trend in expenses\"</li>\r\n                        <li>\"Compare this year vs last year\"</li>\r\n                        <li>\"What are the key metrics in this sheet?\"</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        `;\r\n        chatMessages.innerHTML = welcomeHtml;\r\n    }\r\n\r\n    // Add chat message with enhanced markdown support and data indicators\r\n    addChatMessage(message, isUser = false, isError = false, conversationLength = 0, dataInfo = null) {\r\n        const chatMessages = document.getElementById('chat-messages');\r\n        if (!chatMessages) return;\r\n        \r\n        const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n        \r\n        const messageDiv = document.createElement('div');\r\n        messageDiv.className = `message ${isUser ? 'user' : 'assistant'}`;\r\n        \r\n        const bubbleDiv = document.createElement('div');\r\n        bubbleDiv.className = `message-bubble ${isError ? 'error-message' : ''}`;\r\n        \r\n        if (!isUser && !isError) {\r\n            try {\r\n                bubbleDiv.innerHTML = marked.parse(message);\r\n            } catch (error) {\r\n                console.warn('Markdown parsing failed, falling back to plain text:', error);\r\n                bubbleDiv.textContent = message;\r\n            }\r\n        } else {\r\n            bubbleDiv.textContent = message;\r\n        }\r\n        \r\n        const timeDiv = document.createElement('div');\r\n        timeDiv.className = 'message-time';\r\n        timeDiv.textContent = timestamp;\r\n        \r\n        // Clean context indicators\r\n        if (!isUser && !isError && conversationLength > 1) {\r\n            const contextIndicator = document.createElement('div');\r\n            contextIndicator.style.cssText = `\r\n                font-size: 10px;\r\n                color: #999;\r\n                margin-top: 4px;\r\n                opacity: 0.7;\r\n            `;\r\n            contextIndicator.textContent = `Context: ${conversationLength} exchanges`;\r\n            timeDiv.appendChild(contextIndicator);\r\n        }\r\n        \r\n        messageDiv.appendChild(bubbleDiv);\r\n        messageDiv.appendChild(timeDiv);\r\n        chatMessages.appendChild(messageDiv);\r\n        \r\n        chatMessages.scrollTop = chatMessages.scrollHeight;\r\n    }\r\n\r\n    // Update status message\r\n    updateStatus(message) {\r\n        const statusText = document.getElementById('status-text');\r\n        if (statusText) {\r\n            statusText.textContent = message;\r\n        }\r\n    }\r\n\r\n    // Show/hide loading overlay\r\n    showLoading(show) {\r\n        const loadingOverlay = document.getElementById('loading-overlay');\r\n        if (loadingOverlay) {\r\n            loadingOverlay.style.display = show ? 'flex' : 'none';\r\n        }\r\n    }\r\n\r\n    // Enable/disable UI controls\r\n    setControlsEnabled(enabled) {\r\n        const userInput = document.getElementById('user-input');\r\n        const sendBtn = document.getElementById('send-btn');\r\n        \r\n        if (userInput) userInput.disabled = !enabled;\r\n        if (sendBtn) sendBtn.disabled = !enabled;\r\n    }\r\n\r\n    // Show clean error message\r\n    showError(message) {\r\n        let cleanMessage = message;\r\n        \r\n        // Add helpful context for common errors\r\n        if (message.includes('API key')) {\r\n            cleanMessage += '\\n\\n**Troubleshooting:** Please ensure your Gemini API key is configured in your .env file.';\r\n        } else if (message.includes('quota')) {\r\n            cleanMessage += '\\n\\n**Troubleshooting:** API quota exceeded. Please try again later or check your billing settings.';\r\n        } else if (message.includes('Excel data')) {\r\n            cleanMessage += '\\n\\n**Troubleshooting:** Try selecting a data range first, or ensure your worksheet contains data.';\r\n        }\r\n        \r\n        this.addChatMessage(cleanMessage, false, true);\r\n        this.updateStatus('Error occurred - see message for details');\r\n    }\r\n\r\n    // Get user input value\r\n    getUserInput() {\r\n        const userInput = document.getElementById('user-input');\r\n        return userInput ? userInput.value.trim() : '';\r\n    }\r\n\r\n    // Clear user input\r\n    clearUserInput() {\r\n        const userInput = document.getElementById('user-input');\r\n        if (userInput) {\r\n            userInput.value = '';\r\n        }\r\n    }\r\n\r\n    // Focus on user input\r\n    focusUserInput() {\r\n        const userInput = document.getElementById('user-input');\r\n        if (userInput) {\r\n            userInput.focus();\r\n        }\r\n    }\r\n\r\n    // Clear chat messages\r\n    clearChatMessages() {\r\n        const chatMessages = document.getElementById('chat-messages');\r\n        if (chatMessages) {\r\n            chatMessages.innerHTML = '';\r\n        }\r\n    }\r\n\r\n    // Get data source checkbox state\r\n    getUseSelectionState() {\r\n        const useSelectionCheckbox = document.getElementById('use-selection');\r\n        return useSelectionCheckbox ? useSelectionCheckbox.checked : true;\r\n    }\r\n\r\n    // Handle data source toggle\r\n    handleDataSourceToggle() {\r\n        if (this.getUseSelectionState()) {\r\n            this.updateStatus('Using selected range (or auto-detect if no selection)');\r\n        } else {\r\n            this.updateStatus('Using full sheet with intelligent sampling');\r\n        }\r\n    }\r\n}\r\n\r\n// Export for use in other modules\r\nif (typeof window !== 'undefined') {\r\n    window.UIService = UIService;\r\n}","/* global console, Excel, Office */\r\n\r\n// Import the services for webpack bundling\r\nimport './dataService.js';\r\nimport './aiService.js';\r\nimport './uiService.js';\r\n\r\n// Enhanced Excel Data Assistant - Main Orchestrator\r\n// Uses DataService, AIService, and UIService for clean separation of concerns\r\n\r\n// Service instances\r\nlet dataService;\r\nlet aiService;\r\nlet uiService;\r\n\r\n// Initialize Office Add-in\r\nOffice.onReady((info) => {\r\n    if (info.host === Office.HostType.Excel) {\r\n        initializeServices();\r\n        console.log('Enhanced Excel Chatbot initialized successfully');\r\n    }\r\n});\r\n\r\n// Initialize all services and set up the application\r\nfunction initializeServices() {\r\n    try {\r\n        // Initialize services\r\n        dataService = new window.DataService();\r\n        aiService = new window.AIService();\r\n        uiService = new window.UIService();\r\n        \r\n        // Initialize AI service\r\n        aiService.initializeGemini();\r\n        \r\n        // Set up UI callbacks\r\n        uiService.setOnSendMessageCallback(handleSendMessage);\r\n        uiService.setOnClearConversationCallback(handleClearConversation);\r\n        uiService.setOnDataSourceToggleCallback(() => uiService.handleDataSourceToggle());\r\n        \r\n        // Initialize UI\r\n        uiService.setupEventListeners();\r\n        uiService.showWelcomeMessage();\r\n        uiService.updateStatus('Ready to analyze your data');\r\n        \r\n    } catch (error) {\r\n        console.error('Error initializing services:', error);\r\n        if (uiService) {\r\n            uiService.showError('Failed to initialize application: ' + error.message);\r\n        }\r\n    }\r\n}\r\n\r\n// Main message handling orchestration\r\nasync function handleSendMessage() {\r\n    const message = uiService.getUserInput();\r\n    if (!message) return;\r\n    \r\n    // Clear input and disable controls\r\n    uiService.clearUserInput();\r\n    uiService.setControlsEnabled(false);\r\n    \r\n    // Add user message to chat\r\n    uiService.addChatMessage(message, true);\r\n    \r\n    // Add to conversation history\r\n    aiService.addToConversationHistory('user', message);\r\n    \r\n    // Show loading state\r\n    uiService.showLoading(true);\r\n    uiService.updateStatus('Reading Excel data...');\r\n    \r\n    try {\r\n        // Read Excel data\r\n        const shouldUseSelection = uiService.getUseSelectionState();\r\n        const worksheetData = await dataService.readCurrentWorksheetDataEnhanced(shouldUseSelection);\r\n        \r\n        // Process with AI\r\n        uiService.updateStatus('Analyzing data...');\r\n        const response = await aiService.askGeminiWithContext(message, worksheetData);\r\n        \r\n        // Add AI response to conversation history\r\n        aiService.addToConversationHistory('assistant', response);\r\n        \r\n        // Prepare enhanced data info for UI indicators\r\n        const dataInfo = {\r\n            isSampled: worksheetData.isSampled || false,\r\n            hasFormulas: worksheetData.structuredData?.formulaAnalysis?.hasFormulas || false,\r\n            multiSheet: worksheetData.workbookData?.totalSheets > 1 || false,\r\n            hasObjects: (worksheetData.dataMetadata?.tables?.length > 0) || \r\n                       (worksheetData.dataMetadata?.pivotTables?.length > 0) || \r\n                       (worksheetData.dataMetadata?.charts?.length > 0) || false\r\n        };\r\n        \r\n        // Display response with enhanced indicators\r\n        const conversationLength = aiService.getConversationLength();\r\n        uiService.addChatMessage(response, false, false, conversationLength, dataInfo);\r\n        \r\n        // Clean status message\r\n        let statusMessage = `Analysis complete (${conversationLength} exchanges)`;\r\n        if (dataInfo.isSampled) statusMessage += ' • Sampled';\r\n        statusMessage += ' • Ready';\r\n        \r\n        uiService.updateStatus(statusMessage);\r\n        \r\n    } catch (error) {\r\n        console.error('Error processing message:', error);\r\n        uiService.addChatMessage('Sorry, I encountered an error processing your request. Please try again.', false, true);\r\n        uiService.updateStatus('Error occurred - please try again');\r\n    } finally {\r\n        // Re-enable controls\r\n        uiService.showLoading(false);\r\n        uiService.setControlsEnabled(true);\r\n        uiService.focusUserInput();\r\n    }\r\n}\r\n\r\n// Handle clear conversation\r\nfunction handleClearConversation() {\r\n    // Clear AI conversation\r\n    aiService.clearConversation();\r\n    \r\n    // Clear UI\r\n    uiService.clearChatMessages();\r\n    uiService.showWelcomeMessage();\r\n    uiService.updateStatus('Conversation cleared - ready for new questions');\r\n    \r\n    // Clear data service cache\r\n    dataService.clearCurrentData();\r\n    \r\n    console.log('Conversation and enhanced data cache cleared');\r\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_2___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Excel Chatbot</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"/> </head> <body> <div class=\\\"ms-welcome\\\"> <header class=\\\"ms-welcome__header\\\"> <img width=\\\"60\\\" height=\\\"60\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\" alt=\\\"Excel Assistant\\\" title=\\\"Excel Assistant\\\"/> <h1 class=\\\"ms-font-su\\\">Excel Assistant</h1> <p class=\\\"ms-font-m\\\">Intelligent data analysis</p> </header> <div id=\\\"status-bar\\\" class=\\\"status-bar\\\"> <span id=\\\"status-text\\\">Ready to analyze your data</span> </div> <div class=\\\"data-source-toggle\\\"> <label class=\\\"checkbox-container\\\"> <input type=\\\"checkbox\\\" id=\\\"use-selection\\\" checked=\\\"checked\\\"> <span class=\\\"checkmark\\\"></span> <span class=\\\"checkbox-text\\\">Use selected range</span> </label> </div> <div class=\\\"chat-container\\\"> <div id=\\\"chat-messages\\\" class=\\\"chat-messages\\\"> </div> <div class=\\\"chat-input-container\\\"> <div class=\\\"input-group\\\"> <input type=\\\"text\\\" id=\\\"user-input\\\" placeholder=\\\"Ask a question about your Excel data...\\\" autocomplete=\\\"off\\\"/> <button id=\\\"send-btn\\\" class=\\\"send-button\\\" title=\\\"Send message\\\"> <svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"> <line x1=\\\"22\\\" y1=\\\"2\\\" x2=\\\"11\\\" y2=\\\"13\\\"></line> <polygon points=\\\"22,2 15,22 11,13 2,9\\\"></polygon> </svg> </button> </div> <div class=\\\"input-hint\\\"> Press Enter to send or click the arrow button </div> </div> </div> <div id=\\\"loading-overlay\\\" class=\\\"loading-overlay\\\" style=\\\"display:none\\\"> <div class=\\\"loading-spinner\\\"> <div class=\\\"spinner\\\"></div> <p>Analyzing your data...</p> </div> </div> </div> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_2___ + \"\\\"><\" + \"/script> </body> </html>\";\n// Exports\nexport default code;"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_typeof","toPrimitive","String","_toPrimitive","DataService","_classCallCheck","this","CONFIG","MAX_ANALYSIS_CELLS","CHUNK_SIZE","SAMPLE_RATIO","currentWorksheetData","workbookStructure","_readCurrentWorksheetDataEnhanced","_callee2","shouldUseSelection","includeAllSheets","_this","_args2","_context2","undefined","reject","Excel","run","_ref","_callee","context","worksheet","range","isSelection","isSampled","dataMetadata","tables","pivotTables","charts","selectedRange","totalCells","usedRange","_totalCells","rawValues","rawFormulas","numberFormats","finalAddress","structuredData","workbookData","_t","_t2","_t3","_t4","_t5","_context","workbook","worksheets","getActiveWorksheet","load","getSelectedRange","sync","rowCount","columnCount","values","console","log","concat","address","getSmartSampledRange","getUsedRange","items","map","name","id","detectNamedRanges","hasNamedRanges","worksheetName","type","headers","dataRows","keyRows","summary","formulas","numberFormat","analyzeAdvancedTableStructure","analyzeWorkbookStructure","totalRows","totalCols","rawData","generateDataSummary","Error","message","_x","_getSmartSampledRange","_callee3","originalRange","maxSampleRows","maxSampleCols","headerRows","footerRows","middleRows","sampleCols","ranges","startCol","endCol","step","rowNum","_startCol","_endCol","startRow","_startCol2","_endCol2","simplifiedEndCol","simplifiedRange","_context3","Math","min","floor","sqrt","max","getColumnLetter","push","getRange","_isSampled","_originalSize","rows","cols","_x2","_x3","_x4","_detectNamedRanges","_callee4","namedItems","_t6","_context4","names","_x5","_analyzeWorkbookStructure","_callee5","sheetInfo","_iterator","_step","sheet","_t7","_t8","_context5","_createForOfIteratorHelper","s","position","dataRange","totalSheets","sheets","totalDataCells","reduce","sum","_x6","_this2","result","columnHeaders","quarterlyData","rowLabels","formulaAnalysis","analyzeFormulas","formatAnalysis","analyzeNumberFormats","dataTypes","analyzeDataTypes","cleanData","row","rowIndex","cell","colIndex","trim","format","originalType","isFormula","startsWith","detectedType","detectCellType","headerRowIndex","findHeaderRow","slice","join","rowLabel","rowData","label","originalRow","isTotal","isLikelyTotalRow","isSubtotal","isLikelySubtotalRow","category","categorizeRowLabel","hasFormulas","some","isKeyFinancialRow","hasQuarterlyPattern","quarterlyRow","extractQuarterlyData","quarters","formulaCount","types","formulaTypes","Set","forEach","matches","match","add","Array","from","hasFormatting","formatTypes","size","_this3","text","number","date","currency","percentage","boolean","hasOwnProperty","includes","isNaN","Date","parse","parseFloat","isFinite","filter","val","test","pattern","h","originalSize","header","index","quarter","columnIndex","labelType","columnNumber","columnLetter","remainder","fromCharCode","charCodeAt","_readAllWorksheets","_callee7","_this4","_context7","_ref2","_callee6","allSheetsData","_iterator2","_step2","sheetData","_t9","_t0","_t1","_context6","getItem","activate","readCurrentWorksheetDataEnhanced","error","allSheets","_x7","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","g","globalThis","Function","obj","prop","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","replace","b","baseURI","self","href","SchemaType","ExecutableCodeLanguage","Outcome","POSSIBLE_ROLES","HarmCategory","HarmBlockThreshold","HarmProbability","BlockReason","FinishReason","TaskType","FunctionCallingMode","DynamicRetrievalMode","Task","GoogleGenerativeAIError","constructor","super","GoogleGenerativeAIResponseError","response","GoogleGenerativeAIFetchError","status","statusText","errorDetails","GoogleGenerativeAIRequestInputError","GoogleGenerativeAIAbortError","RequestUrl","model","task","apiKey","stream","requestOptions","toString","_a","_b","apiVersion","url","baseUrl","async","getHeaders","Headers","append","clientHeaders","apiClient","getClientHeaders","customHeaders","JSON","stringify","headerName","headerValue","entries","makeModelRequest","body","fetchFn","fetch","fetchOptions","assign","buildFetchOptions","method","constructModelRequest","err","stack","handleResponseError","ok","json","details","handleResponseNotOk","makeRequest","signal","timeout","controller","AbortController","setTimeout","abort","addEventListener","addHelpers","candidates","warn","hadBadFinishReason","formatBlockErrorMessage","_c","_d","textStrings","content","parts","part","executableCode","language","code","codeExecutionResult","output","getText","promptFeedback","functionCall","getFunctionCalls","functionCalls","badFinishReasons","RECITATION","SAFETY","LANGUAGE","candidate","finishReason","firstCandidate","finishMessage","blockReason","blockReasonMessage","__await","SuppressedError","responseLineRE","getResponsePromise","allResponses","reader","getReader","read","aggregateResponses","generateResponseSequence","thisArg","_arguments","generator","asyncIterator","q","verb","resume","fulfill","settle","shift","__asyncGenerator","responses","lastResponse","aggregatedResponse","candidateIndex","citationMetadata","groundingMetadata","safetyRatings","role","newPart","keys","usageMetadata","generateContentStream","params","responseStream","inputStream","ReadableStream","start","currentText","pump","close","parsedResponse","enqueue","substring","catch","getResponseStream","pipeThrough","TextDecoderStream","fatal","stream1","stream2","tee","processStream","STREAM_GENERATE_CONTENT","generateContent","GENERATE_CONTENT","formatSystemInstruction","input","formatNewContent","request","newParts","partOrString","userContent","functionContent","hasUserContent","hasFunctionContent","assignRoleToPartsAndValidateSendMessageRequest","formatGenerateContentInput","formattedRequest","contents","systemInstruction","VALID_PART_FIELDS","VALID_PARTS_PER_ROLE","user","function","system","isValidResponse","SILENT_ERROR","ChatSession","_requestOptions","_history","_sendPromise","_apiKey","history","prevContent","currContent","isArray","countFields","inlineData","functionResponse","fileData","validParts","validateChatHistory","getHistory","sendMessage","_e","_f","newContent","generateContentRequest","safetySettings","generationConfig","tools","toolConfig","cachedContent","chatSessionRequestOptions","finalResult","responseContent","blockErrorMessage","sendMessageStream","streamPromise","_ignored","streamResult","GenerativeModel","modelParams","formattedParams","generativeModelRequestOptions","startChat","startChatParams","countTokens","formattedGenerateContentRequest","containsGenerateContentRequest","formatCountTokensInput","singleRequestOptions","COUNT_TOKENS","embedContent","EMBED_CONTENT","batchEmbedContents","batchEmbedContentRequest","requestsWithModel","requests","BATCH_EMBED_CONTENTS","GoogleGenerativeAI","getGenerativeModel","getGenerativeModelFromCachedContent","disallowedDuplicates","modelParamsFromCache","AIService","GEMINI_API_KEY","process","GEMINI_MODEL","MAX_HISTORY","MAX_CONTEXT_TOKENS","genAI","conversationHistory","chatSession","userQuestion","systemPrompt","contextualPrompt","compressedPrompt","_result","_response","createAdvancedSystemPrompt","maxOutputTokens","temperature","topP","topK","createAdvancedContextualPrompt","compressPrompt","_askGeminiWithContext","data","prompt","_meta$tables","_meta$pivotTables","_meta$charts","_meta$tables2","_meta$pivotTables2","_meta$charts2","meta","wb","toLocaleString","_struct$columnHeaders","_struct$dataRows","_struct$keyRows","_struct$totalRows","_struct$formatAnalysi","_struct$quarterlyData","_struct$keyRows2","_struct$keyRows3","struct","formats","count","_slicedToArray","toFixed","qData","quarterValues","formatValue","nonEmptyValues","otherRows","find","keyRow","msg","truncated","originalPrompt","_struct$columnHeaders2","_struct$keyRows4","_struct$dataRows2","_struct$keyRows5","_struct$quarterlyData2","lastExchange","abs","timestamp","toISOString","_defaults","breaks","extensions","gfm","hooks","pedantic","renderer","silent","tokenizer","walkTokens","changeDefaults","newDefaults","escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","html","encode","unescapeTest","_","toLowerCase","charAt","parseInt","caret","edit","regex","opt","getRegex","cleanUrl","encodeURI","noopTest","exec","splitCells","tableRow","cells","offset","str","escaped","curr","split","pop","splice","rtrim","invert","suffLen","currChar","outputLink","cap","link","raw","lexer","title","state","inLink","token","tokens","inlineTokens","_Tokenizer","options","rules","space","block","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","indentCodeCompensation","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","bull","isordered","ordered","loose","itemRegex","itemContents","endsWithBlankLine","endEarly","line","repeat","nextLine","indent","trimStart","search","blankLine","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","rawLine","ischecked","istask","checked","trimEnd","spacers","hasMultipleLineBreaks","pre","def","tag","table","item","align","j","k","lheading","paragraph","escape","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","indexOf","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","lastCharLength","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","anyPunctuation","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","_Lexer","inlineQueue","lex","lexInline","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","keepPrevChar","lastIndexOf","startInline","_Renderer","infostring","quote","listitem","checkbox","tablerow","tablecell","flags","cleanHref","out","image","_TextRenderer","_Parser","textRenderer","parseInline","renderers","genericToken","ret","parser","headingToken","codeToken","tableToken","blockquoteToken","listToken","itemBody","unshift","htmlToken","paragraphToken","textToken","escapeToken","tagToken","linkToken","imageToken","strongToken","emToken","codespanToken","delToken","_Hooks","static","preprocess","markdown","postprocess","markedInstance","defaults","setOptions","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","args","use","callback","childTokens","pack","opts","ext","prevRenderer","extLevel","rendererFunc","rendererKey","tokenizerFunc","tokenizerKey","prevTokenizer","hooksFunc","hooksKey","prevHook","passThroughHooks","has","arg","packWalktokens","origOpt","throwError","all","marked","getDefaults","dataService","aiService","uiService","UIService","setupMarkdown","onSendMessageCallback","onClearConversationCallback","onDataSourceToggleCallback","sanitize","userInput","getElementById","sendBtn","shiftKey","preventDefault","focus","addClearConversationButton","setupDataSourceToggle","inputContainer","querySelector","clearBtn","createElement","innerHTML","className","style","cssText","backgroundColor","appendChild","useSelectionCheckbox","chatMessages","isUser","isError","conversationLength","toLocaleTimeString","hour","minute","messageDiv","bubbleDiv","textContent","timeDiv","contextIndicator","scrollTop","scrollHeight","show","loadingOverlay","display","enabled","disabled","cleanMessage","addChatMessage","updateStatus","getUseSelectionState","handleSendMessage","_handleSendMessage","_worksheetData$struct","_worksheetData$workbo","_worksheetData$dataMe","_worksheetData$dataMe2","_worksheetData$dataMe3","worksheetData","dataInfo","statusMessage","getUserInput","clearUserInput","setControlsEnabled","addToConversationHistory","showLoading","askGeminiWithContext","multiSheet","hasObjects","getConversationLength","focusUserInput","handleClearConversation","clearConversation","clearChatMessages","showWelcomeMessage","clearCurrentData","Office","onReady","info","host","HostType","initializeGemini","setOnSendMessageCallback","setOnClearConversationCallback","setOnDataSourceToggleCallback","handleDataSourceToggle","setupEventListeners","showError","initializeServices","URL"],"sourceRoot":""}